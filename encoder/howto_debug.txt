if you want to debug a vector just print like this:

print(displacement)

will produce in console:

  [1]  1 -1 -1 -1  0 -1 -1 -1  0 -1 -1 -1 -1  0 -1 -1 -1  0 -1 -1 -1 -1  0 -1 -1
 [26] -1  0 -1 -1 -1 -1  0 -1 -1 -1  0 -1 -1 -1  0 -1 -1 -1 -1  0 -1 -1 -1  0 -1
 [51] -1 -1  0 -1 -1 -1 -1  0 -1 -1 -1  0 -1 -1 -1  0 -1 -1 -1  0 -1 -1 -1  0 -1
 ....

copy paste in vim and there remove the initial [xxx] using:
:%s/\[.*\]//

save:
:w

then open in R
a=scan("myfile.txt")


If you want to check better eg what graph.R is doing, just do:

Do the graph with Chronojump, some files will be created like: /tmp/Roptions.txt, /tmp/chronojump-encoder-graph-input-multi.csv, /tmp/chronojump_enc_curve_1.txt
at encoder folder call R

# 1st time
source ("util.R")
source ("graphSmoothingEC.R")
source ("graph.R")
optionsFile = "/tmp/Roptions.txt"
options <- scan(optionsFile, comment.char="#", what=character(), sep="\n")
DebugFileName <- paste(options[5], "/chronojump-debug.txt", sep="")
English = unlist(strsplit(options[29], "\\;"))
Translated = unlist(strsplit(options[30], "\\;"))
Debug <- TRUE

# each time you do an analyze on Chronojump (and Roptions.txt changed)
options <- scan(optionsFile, comment.char="#", what=character(), sep="\n")
doProcess (options)

# plot displacement curves graph and write files in order to compare them with vim
displacementCurvesDebug (TRUE)

# Note warnings sometimes continue appearing even when code has changed and source has done, is best to close/open terminal console

#using debug is very useful, eg:

d <- scan ("tests/fixEccConCutOnNotSingleFile/curve1.txt", sep = ",")
d  = d[!is.na(d)]
debug (reduceCurveByPredictStartEnd)
reduceCurveByPredictStartEnd (d, "ec", 20)

#then you can press
n for seeing NEXT line of code and print (variable) to print the value, note if a you see var <- "my var", this is going to be assigned on next step
c to continue until end
Q to quit debug (but strangely continues to being associated)
ls () will show the local objects in the debug function, and you can print them writing the variable and enter or using print (variable) if they are named n, c, Q


Example of usage:
-----------------
Chronojump session borrame3 person provaEnc

A)
Analyze currentSession Select repetition (2) (2023-05-25 10:44:43)
mode: bars ecS
Click on Analyze
on a terminal:

- paste the 1st time code
- paste the each time code

result:
"curves before pafGenerate"
   start  end startH   exerciseName massBody massExtra            dateTime
2e     1  899      0 Press de Banca       50        70 2023-05-25 10:44:43
2c   907 2016      0 Press de Banca       50        70 2023-05-25 10:44:43
   myEccon seriesName percentBodyWeight econfName econfd econfD econfAnglePush
2e       e   provaEnc                 0    LINEAR     -1     -1             -1
2c       c   provaEnc                 0    LINEAR     -1     -1             -1

889 - 1 = 898
2016 - 907 = 1109

B)
Now load that set and analyze current set, bars, ecS, click on analyze
on a terminal paste the each time codde

result:
"curves before pafGenerate"
  startStored endStored startHStored
1      1002.5    1900.5            0
2      2123.5    3017.5            0
3      3095.0    4128.0            0
4      4317.5    5250.5            0

we care about 1 and 2
1900.5 - 1002.5 = 898
3017.5 -2123.5 = 894

1109 != 894

check displacementDebug curvesDebug with:
displacementCurvesDebug(TRUE)
see images: fixEccConCutOnNotSingleFile/current-set.png fixEccConCutOnNotSingleFile/current-session.png
the problem is on current-session.png (! singleFile)

continue investigating on graph.R: print ("continue investigating here!")

