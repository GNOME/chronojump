1. Download and install InnnoSetup: https://jrsoftware.org/download.php/is.exe

2. Open win32/package-x64.bat & win32/package-x86.bat and modify InnoSetupâ€™s path

3. Enable CPU Virtualization Technology from BIOS

4. Install "Windows Subsystem for Linux" and "Debian" from Microsoft Store

Ensure that "Virtual Machine Platform" is active at "Control Panel / Programs / Turn Windows features on/off" (Need to restart after doing it)
Note that it may not work if you are using a virtualized Windows on a Linux host. Just install Windows on the hard disk

Install Visual Studio Code and install extension "C# Dev Kit" there
Install .NET 7 SDK x64 from https://dotnet.microsoft.com/es-es/download/dotnet/thank-you/sdk-7.0.404-windows-x64-installer

5. Open WSL2 Debian terminal and initialize Debian

6. Execute the following commands (Only when the first time. Please replace "d/JuSha" with the real path of chronojump and d is drive letter)

#sudo dpkg --add-architecture i386
sudo apt-get update
cd "/mnt/d/JuSha/chronojump"
sudo apt-get -y install dos2unix
cd build
dos2unix icon-theme-installer
dos2unix private-icon-theme-installer
cd ..
sudo apt-get -y install autoconf
sudo apt-get -y install git
sudo apt-get -y install libtool
sudo apt-get -y install intltool
sudo apt-get -y install pkg-config
sudo apt -y install build-essential
sudo apt-get -y install python3
sudo apt -y install libglib2.0-dev
sudo apt -y install gtk-sharp3
#sudo apt -y install wine32:i386

Note that wine is used to call Windows exe from Linux but InnoSetup is not compatible, so releated commands are commented.

7. Execute the following commands (Only when the first time, when autotools files changed or when git tag created. Please replace "d/JuSha" with the real path of chronojump and d is drive letter)

cd "/mnt/d/JuSha/chronojump"
dos2unix autogen.sh
dos2unix configure.ac
sh autogen.sh --prefix /mnt/d/JuSha/chronojump/win32/deps
make
make install #note errors on install of Mini
cd win32
make installer #does not work

8. Execute "win32/package-x64.bat" (Only when a package required)

It has to be executed outside of Debian (eg. on Visual Studio Code terminal, on git bash, etc.)

9. When no git tags, please modify "src/AssemblyInfo.cs" to add version number like 1.0.0.0

[assembly: AssemblyVersion("1.0.0.0")]

10. Software can be run without creating package with

dotnet run --property WarningLevel=0
