
R Under development (unstable) (2019-04-30 r76446) -- "Unsuffered Consequences"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(cluster)
> 
> if(getRversion() < "3.4.0") source("withAutoprint.R")
> 
> data(animals)
> (mani <- mona(animals, trace=TRUE))
Loop npass = 1: (ka,kb) = (1,20)
  for(j ..) -> jma=1, jtel(.,z) = (10, 10) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (1, 10, 10, 11)
 --> nclu = 2, kwan[ka] = 10
L500; found kwan[1] = 10 >= 2  ==> Loop again
Loop npass = 2: (ka,kb) = (1,10)
  for(j ..) -> jma=3, jtel(.,z) = (4, 6) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (1, 6, 4, 7)
 --> nclu = 3, kwan[ka] = 4
Loop npass = 2: (ka,kb) = (11,20)
  for(j ..) -> jma=2, jtel(.,z) = (2, 8) --> splitting: ka=11, ner[ka]=3 => (nzf, jtel2, jres, km) = (1, 8, 2, 19)
 --> nclu = 4, kwan[ka] = 2
L500; found kwan[1] = 6 >= 2  ==> Loop again
Loop npass = 3: (ka,kb) = (1,6)
  for(j ..) -> jma=2, jtel(.,z) = (2, 4) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (1, 4, 2, 5)
 --> nclu = 5, kwan[ka] = 2
Loop npass = 3: (ka,kb) = (7,10)
  for(j ..) -> jma=4, jtel(.,z) = (1, 3) --> splitting: ka=7, ner[ka]=11 => (nzf, jtel2, jres, km) = (0, 1, 3, 8)
 --> nclu = 6, kwan[ka] = 3
Loop npass = 3: (ka,kb) = (11,18)
  for(j ..) -> jma=4, jtel(.,z) = (5, 3) --> splitting: ka=11, ner[ka]=3 => (nzf, jtel2, jres, km) = (1, 3, 5, 14)
 --> nclu = 7, kwan[ka] = 5
Loop npass = 3: (ka,kb) = (19,20)
  for(j ..) -> jma=4, jtel(.,z) = (1, 1) --> splitting: ka=19, ner[ka]=7 => (nzf, jtel2, jres, km) = (1, 1, 1, 20)
 --> nclu = 8, kwan[ka] = 1
L500; found kwan[1] = 4 >= 2  ==> Loop again
Loop npass = 4: (ka,kb) = (1,4)
  for(j ..) -> jma=5, jtel(.,z) = (1, 3) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (0, 1, 3, 2)
 --> nclu = 9, kwan[ka] = 3
Loop npass = 4: (ka,kb) = (5,6)
  for(j ..) -> jma=5, jtel(.,z) = (1, 1) --> splitting: ka=5, ner[ka]=2 => (nzf, jtel2, jres, km) = (0, 1, 1, 6)
 --> nclu = 10, kwan[ka] = 1
Loop npass = 4: (ka,kb) = (8,10)
  for(j ..) -> jma=5, jtel(.,z) = (1, 2) --> splitting: ka=8, ner[ka]=12 => (nzf, jtel2, jres, km) = (0, 1, 2, 9)
 --> nclu = 11, kwan[ka] = 2
Loop npass = 4: (ka,kb) = (11,13)
  for(j ..) -> jma=5, jtel(.,z) = (2, 1) --> splitting: ka=11, ner[ka]=3 => (nzf, jtel2, jres, km) = (1, 1, 2, 12)
 --> nclu = 12, kwan[ka] = 2
Loop npass = 4: (ka,kb) = (14,18)
  for(j ..) -> jma=6, jtel(.,z) = (3, 2) --> splitting: ka=14, ner[ka]=5 => (nzf, jtel2, jres, km) = (0, 3, 2, 17)
 --> nclu = 13, kwan[ka] = 2
L500; found kwan[2] = 3 >= 2  ==> Loop again
Loop npass = 5: (ka,kb) = (2,4)
  for(j ..) -> jma=6, jtel(.,z) = (2, 1) --> splitting: ka=2, ner[ka]=4 => (nzf, jtel2, jres, km) = (0, 2, 1, 4)
 --> nclu = 14, kwan[ka] = 1
Loop npass = 5: (ka,kb) = (9,10)
  for(j ..) -> jma=6, jtel(.,z) = (2, 1) --> _NO_ splitting
 --> nclu = 14, kwan[ka] = -2
Loop npass = 5: (ka,kb) = (12,13)
  for(j ..) -> jma=6, jtel(.,z) = (2, 1) --> _NO_ splitting
 --> nclu = 14, kwan[ka] = -2
Loop npass = 5: (ka,kb) = (14,16)
  for(j ..) -> jma=6, jtel(.,z) = (2, 1) --> _NO_ splitting
 --> nclu = 14, kwan[ka] = -3
Loop npass = 5: (ka,kb) = (17,18)
  for(j ..) -> jma=6, jtel(.,z) = (2, 1) --> _NO_ splitting
 --> nclu = 14, kwan[ka] = -2
L500; found kwan[2] = 2 >= 2  ==> Loop again
Loop npass = 6: (ka,kb) = (2,3)
  for(j ..) -> jma=6, jtel(.,z) = (2, 1) --> _NO_ splitting
 --> nclu = 14, kwan[ka] = -2
mona(x, ..) fit;  x of dimension 20x6
Because of NA's, revised data:
    war fly ver end gro hai
ant   0   0   0   0   1   0
bee   0   1   0   0   1   1
cat   1   0   1   0   0   1
cpl   0   0   0   0   0   1
chi   1   0   1   1   1   1
cow   1   0   1   0   1   1
duc   1   1   1   0   1   0
eag   1   1   1   1   0   0
ele   1   0   1   1   1   0
fly   0   1   0   0   0   0
fro   0   0   1   1   0   0
her   0   0   1   0   1   0
lio   1   0   1   1   1   1
liz   0   0   1   0   0   0
lob   0   0   0   0   0   0
man   1   0   1   1   1   1
rab   1   0   1   0   1   1
sal   0   0   1   0   0   0
spi   0   0   0   0   0   1
wha   1   0   1   1   1   0
Order of objects:
 [1] ant cpl spi lob bee fly fro her liz sal cat cow rab chi lio man ele wha duc
[20] eag
Variable used:
 [1] gro  NULL hai  fly  gro  ver  end  gro  NULL war  gro  NULL end  NULL NULL
[16] hai  NULL fly  end 
Separation step:
 [1] 4 0 5 3 4 2 3 4 0 1 4 0 3 0 0 4 0 2 3

Available components:
[1] "data"      "hasNA"     "order"     "variable"  "step"      "order.lab"
[7] "call"     
> str(mani)
List of 7
 $ data     : int [1:20, 1:6] 0 0 1 0 1 1 1 1 1 0 ...
  ..- attr(*, "dimnames")=List of 2
  .. ..$ : chr [1:20] "ant" "bee" "cat" "cpl" ...
  .. ..$ : chr [1:6] "war" "fly" "ver" "end" ...
 $ hasNA    : logi TRUE
 $ order    : int [1:20] 1 4 19 15 2 10 11 12 14 18 ...
 $ variable : chr [1:19] "gro" "NULL" "hai" "fly" ...
 $ step     : int [1:19] 4 0 5 3 4 2 3 4 0 1 ...
 $ order.lab: chr [1:20] "ant" "cpl" "spi" "lob" ...
 $ call     : language mona(x = animals, trace.lev = TRUE)
 - attr(*, "class")= chr "mona"
> ## version of the data withOUT missing:
> animal.F <- mani$data
> (maniF <- mona(animal.F, trace=TRUE))
Loop npass = 1: (ka,kb) = (1,20)
  for(j ..) -> jma=1, jtel(.,z) = (10, 10) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (1, 10, 10, 11)
 --> nclu = 2, kwan[ka] = 10
L500; found kwan[1] = 10 >= 2  ==> Loop again
Loop npass = 2: (ka,kb) = (1,10)
  for(j ..) -> jma=3, jtel(.,z) = (4, 6) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (1, 6, 4, 7)
 --> nclu = 3, kwan[ka] = 4
Loop npass = 2: (ka,kb) = (11,20)
  for(j ..) -> jma=2, jtel(.,z) = (2, 8) --> splitting: ka=11, ner[ka]=3 => (nzf, jtel2, jres, km) = (1, 8, 2, 19)
 --> nclu = 4, kwan[ka] = 2
L500; found kwan[1] = 6 >= 2  ==> Loop again
Loop npass = 3: (ka,kb) = (1,6)
  for(j ..) -> jma=2, jtel(.,z) = (2, 4) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (1, 4, 2, 5)
 --> nclu = 5, kwan[ka] = 2
Loop npass = 3: (ka,kb) = (7,10)
  for(j ..) -> jma=4, jtel(.,z) = (1, 3) --> splitting: ka=7, ner[ka]=11 => (nzf, jtel2, jres, km) = (0, 1, 3, 8)
 --> nclu = 6, kwan[ka] = 3
Loop npass = 3: (ka,kb) = (11,18)
  for(j ..) -> jma=4, jtel(.,z) = (5, 3) --> splitting: ka=11, ner[ka]=3 => (nzf, jtel2, jres, km) = (1, 3, 5, 14)
 --> nclu = 7, kwan[ka] = 5
Loop npass = 3: (ka,kb) = (19,20)
  for(j ..) -> jma=4, jtel(.,z) = (1, 1) --> splitting: ka=19, ner[ka]=7 => (nzf, jtel2, jres, km) = (1, 1, 1, 20)
 --> nclu = 8, kwan[ka] = 1
L500; found kwan[1] = 4 >= 2  ==> Loop again
Loop npass = 4: (ka,kb) = (1,4)
  for(j ..) -> jma=5, jtel(.,z) = (1, 3) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (0, 1, 3, 2)
 --> nclu = 9, kwan[ka] = 3
Loop npass = 4: (ka,kb) = (5,6)
  for(j ..) -> jma=5, jtel(.,z) = (1, 1) --> splitting: ka=5, ner[ka]=2 => (nzf, jtel2, jres, km) = (0, 1, 1, 6)
 --> nclu = 10, kwan[ka] = 1
Loop npass = 4: (ka,kb) = (8,10)
  for(j ..) -> jma=5, jtel(.,z) = (1, 2) --> splitting: ka=8, ner[ka]=12 => (nzf, jtel2, jres, km) = (0, 1, 2, 9)
 --> nclu = 11, kwan[ka] = 2
Loop npass = 4: (ka,kb) = (11,13)
  for(j ..) -> jma=5, jtel(.,z) = (2, 1) --> splitting: ka=11, ner[ka]=3 => (nzf, jtel2, jres, km) = (1, 1, 2, 12)
 --> nclu = 12, kwan[ka] = 2
Loop npass = 4: (ka,kb) = (14,18)
  for(j ..) -> jma=6, jtel(.,z) = (3, 2) --> splitting: ka=14, ner[ka]=5 => (nzf, jtel2, jres, km) = (0, 3, 2, 17)
 --> nclu = 13, kwan[ka] = 2
L500; found kwan[2] = 3 >= 2  ==> Loop again
Loop npass = 5: (ka,kb) = (2,4)
  for(j ..) -> jma=6, jtel(.,z) = (2, 1) --> splitting: ka=2, ner[ka]=4 => (nzf, jtel2, jres, km) = (0, 2, 1, 4)
 --> nclu = 14, kwan[ka] = 1
Loop npass = 5: (ka,kb) = (9,10)
  for(j ..) -> jma=6, jtel(.,z) = (2, 1) --> _NO_ splitting
 --> nclu = 14, kwan[ka] = -2
Loop npass = 5: (ka,kb) = (12,13)
  for(j ..) -> jma=6, jtel(.,z) = (2, 1) --> _NO_ splitting
 --> nclu = 14, kwan[ka] = -2
Loop npass = 5: (ka,kb) = (14,16)
  for(j ..) -> jma=6, jtel(.,z) = (2, 1) --> _NO_ splitting
 --> nclu = 14, kwan[ka] = -3
Loop npass = 5: (ka,kb) = (17,18)
  for(j ..) -> jma=6, jtel(.,z) = (2, 1) --> _NO_ splitting
 --> nclu = 14, kwan[ka] = -2
L500; found kwan[2] = 2 >= 2  ==> Loop again
Loop npass = 6: (ka,kb) = (2,3)
  for(j ..) -> jma=6, jtel(.,z) = (2, 1) --> _NO_ splitting
 --> nclu = 14, kwan[ka] = -2
mona(x, ..) fit;  x of dimension 20x6
Order of objects:
 [1] ant cpl spi lob bee fly fro her liz sal cat cow rab chi lio man ele wha duc
[20] eag
Variable used:
 [1] gro  NULL hai  fly  gro  ver  end  gro  NULL war  gro  NULL end  NULL NULL
[16] hai  NULL fly  end 
Separation step:
 [1] 4 0 5 3 4 2 3 4 0 1 4 0 3 0 0 4 0 2 3

Available components:
[1] "data"      "hasNA"     "order"     "variable"  "step"      "order.lab"
[7] "call"     
> 
> data(plantTraits)
> ## Now construct  'plantT2' which has *all* binary variables
> not2 <- vapply(plantTraits, function(var) !(is.factor(var) && nlevels(var) == 2), NA)
> names(plantTraits)[not2]
 [1] "pdias"     "longindex" "durflow"   "height"    "begflow"   "mycor"    
 [7] "vegaer"    "vegsout"   "autopoll"  "insects"   "wind"     
> 
> plantT2 <- plantTraits
> for(n in names(plantTraits)[not2]) {
+     v <- plantTraits[,n]
+     if(is.factor(v)) {
+         lv <- as.integer(levels(v))# ok for this data
+         v <- as.integer(v)
+         M <- median(lv)
+     } else M <- median(v, na.rm = TRUE)
+     stopifnot(is.finite(M))
+     plantT2[,n] <- (v <= M)
+ }
> summary(plantT2)
   pdias         longindex        durflow          height       
 Mode :logical   Mode :logical   Mode :logical   Mode :logical  
 FALSE:50        FALSE:54        FALSE:39        FALSE:52       
 TRUE :50        TRUE :57        TRUE :97        TRUE :84       
 NA's :36        NA's :25                                       
  begflow          mycor           vegaer         vegsout       
 Mode :logical   Mode :logical   Mode :logical   Mode :logical  
 FALSE:58        FALSE:87        FALSE:17        FALSE:38       
 TRUE :78        TRUE :10        TRUE :117       TRUE :96       
                 NA's :39        NA's :2         NA's :2        
  autopoll        insects           wind         lign   piq       ros     
 Mode :logical   Mode :logical   Mode :logical   0:93   0:119   0   :120  
 FALSE:63        FALSE:84        FALSE:39        1:43   1: 17   1   : 12  
 TRUE :73        TRUE :52        TRUE :97                       NA's:  4  
                                                                          
 semiros    leafy    suman   winan   monocarp polycarp seasaes   seashiv   
 0   :97   0   :47   0:117   0:124   0:127    0: 19    0   :85   0   :128  
 1   :35   1   :85   1: 19   1: 12   1:  9    1:117    1   :47   1   :  4  
 NA's: 4   NA's: 4                                     NA's: 4   NA's:  4  
                                                                           
 seasver    everalw   everparti   elaio     endozoo    epizoo     aquat    
 0   :126   0   :78   0   :112   0   :119   0   :93   0   :109   0   :128  
 1   :  6   1   :54   1   : 20   1   : 12   1   :38   1   : 22   1   :  3  
 NA's:  4   NA's: 4   NA's:  4   NA's:  5   NA's: 5   NA's:  5   NA's:  5  
                                                                           
  windgl      unsp   
 0   :108   0   :93  
 1   : 23   1   :38  
 NA's:  5   NA's: 5  
                     
> 
> (mon.pl2 <- mona(plantT2, trace = TRUE))
Loop npass = 1: (ka,kb) = (1,136)
  for(j ..) -> jma=12, jtel(.,z) = (43, 93) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (0, 43, 93, 44)
 --> nclu = 2, kwan[ka] = 93
L500; found kwan[1] = 43 >= 2  ==> Loop again
Loop npass = 2: (ka,kb) = (1,43)
  for(j ..) -> jma=11, jtel(.,z) = (33, 10) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (0, 33, 10, 34)
 --> nclu = 3, kwan[ka] = 10
Loop npass = 2: (ka,kb) = (44,136)
  for(j ..) -> jma=24, jtel(.,z) = (47, 46) --> splitting: ka=44, ner[ka]=3 => (nzf, jtel2, jres, km) = (0, 47, 46, 91)
 --> nclu = 4, kwan[ka] = 46
L500; found kwan[1] = 33 >= 2  ==> Loop again
Loop npass = 3: (ka,kb) = (1,33)
  for(j ..) -> jma=9, jtel(.,z) = (20, 13) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (0, 20, 13, 21)
 --> nclu = 5, kwan[ka] = 13
Loop npass = 3: (ka,kb) = (34,43)
  for(j ..) -> jma=21, jtel(.,z) = (8, 2) --> splitting: ka=34, ner[ka]=14 => (nzf, jtel2, jres, km) = (0, 8, 2, 42)
 --> nclu = 6, kwan[ka] = 2
Loop npass = 3: (ka,kb) = (44,90)
  for(j ..) -> jma=11, jtel(.,z) = (26, 21) --> splitting: ka=44, ner[ka]=3 => (nzf, jtel2, jres, km) = (1, 21, 26, 65)
 --> nclu = 7, kwan[ka] = 26
Loop npass = 3: (ka,kb) = (91,136)
  for(j ..) -> jma=17, jtel(.,z) = (15, 31) --> splitting: ka=91, ner[ka]=6 => (nzf, jtel2, jres, km) = (0, 15, 31, 106)
 --> nclu = 8, kwan[ka] = 31
L500; found kwan[1] = 20 >= 2  ==> Loop again
Loop npass = 4: (ka,kb) = (1,20)
  for(j ..) -> jma=21, jtel(.,z) = (11, 9) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (0, 11, 9, 12)
 --> nclu = 9, kwan[ka] = 9
Loop npass = 4: (ka,kb) = (21,33)
  for(j ..) -> jma=21, jtel(.,z) = (8, 5) --> splitting: ka=21, ner[ka]=31 => (nzf, jtel2, jres, km) = (0, 8, 5, 29)
 --> nclu = 10, kwan[ka] = 5
Loop npass = 4: (ka,kb) = (34,41)
  for(j ..) -> jma=27, jtel(.,z) = (2, 6) --> splitting: ka=34, ner[ka]=14 => (nzf, jtel2, jres, km) = (1, 6, 2, 40)
 --> nclu = 11, kwan[ka] = 2
Loop npass = 4: (ka,kb) = (42,43)
  for(j ..) -> jma=7, jtel(.,z) = (1, 1) --> splitting: ka=42, ner[ka]=99 => (nzf, jtel2, jres, km) = (0, 1, 1, 43)
 --> nclu = 12, kwan[ka] = 1
Loop npass = 4: (ka,kb) = (44,64)
  for(j ..) -> jma=28, jtel(.,z) = (8, 13) --> splitting: ka=44, ner[ka]=3 => (nzf, jtel2, jres, km) = (1, 13, 8, 57)
 --> nclu = 13, kwan[ka] = 8
Loop npass = 4: (ka,kb) = (65,90)
  for(j ..) -> jma=15, jtel(.,z) = (12, 14) --> splitting: ka=65, ner[ka]=5 => (nzf, jtel2, jres, km) = (0, 12, 14, 77)
 --> nclu = 14, kwan[ka] = 14
Loop npass = 4: (ka,kb) = (91,105)
  for(j ..) -> jma=25, jtel(.,z) = (6, 9) --> splitting: ka=91, ner[ka]=6 => (nzf, jtel2, jres, km) = (1, 9, 6, 100)
 --> nclu = 15, kwan[ka] = 6
Loop npass = 4: (ka,kb) = (106,136)
  for(j ..) -> jma=5, jtel(.,z) = (12, 19) --> splitting: ka=106, ner[ka]=8 => (nzf, jtel2, jres, km) = (0, 12, 19, 118)
 --> nclu = 16, kwan[ka] = 19
L500; found kwan[1] = 11 >= 2  ==> Loop again
Loop npass = 5: (ka,kb) = (1,11)
  for(j ..) -> jma=2, jtel(.,z) = (5, 6) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (0, 5, 6, 6)
 --> nclu = 17, kwan[ka] = 6
Loop npass = 5: (ka,kb) = (12,20)
  for(j ..) -> jma=2, jtel(.,z) = (4, 5) --> splitting: ka=12, ner[ka]=19 => (nzf, jtel2, jres, km) = (1, 5, 4, 17)
 --> nclu = 18, kwan[ka] = 4
Loop npass = 5: (ka,kb) = (21,28)
  for(j ..) -> jma=5, jtel(.,z) = (6, 2) --> splitting: ka=21, ner[ka]=31 => (nzf, jtel2, jres, km) = (0, 6, 2, 27)
 --> nclu = 19, kwan[ka] = 2
Loop npass = 5: (ka,kb) = (29,33)
  for(j ..) -> jma=1, jtel(.,z) = (4, 1) --> splitting: ka=29, ner[ka]=68 => (nzf, jtel2, jres, km) = (1, 1, 4, 30)
 --> nclu = 20, kwan[ka] = 4
Loop npass = 5: (ka,kb) = (34,39)
  for(j ..) -> jma=1, jtel(.,z) = (2, 4) --> splitting: ka=34, ner[ka]=14 => (nzf, jtel2, jres, km) = (0, 2, 4, 36)
 --> nclu = 21, kwan[ka] = 4
Loop npass = 5: (ka,kb) = (40,41)
  for(j ..) -> jma=3, jtel(.,z) = (1, 1) --> splitting: ka=40, ner[ka]=28 => (nzf, jtel2, jres, km) = (1, 1, 1, 41)
 --> nclu = 22, kwan[ka] = 1
Loop npass = 5: (ka,kb) = (44,56)
  for(j ..) -> jma=6, jtel(.,z) = (5, 8) --> splitting: ka=44, ner[ka]=3 => (nzf, jtel2, jres, km) = (1, 8, 5, 52)
 --> nclu = 23, kwan[ka] = 5
Loop npass = 5: (ka,kb) = (57,64)
  for(j ..) -> jma=6, jtel(.,z) = (3, 5) --> splitting: ka=57, ner[ka]=10 => (nzf, jtel2, jres, km) = (1, 5, 3, 62)
 --> nclu = 24, kwan[ka] = 3
Loop npass = 5: (ka,kb) = (65,76)
  for(j ..) -> jma=19, jtel(.,z) = (5, 7) --> splitting: ka=65, ner[ka]=5 => (nzf, jtel2, jres, km) = (1, 7, 5, 72)
 --> nclu = 25, kwan[ka] = 5
Loop npass = 5: (ka,kb) = (77,90)
  for(j ..) -> jma=14, jtel(.,z) = (7, 7) --> splitting: ka=77, ner[ka]=42 => (nzf, jtel2, jres, km) = (1, 7, 7, 84)
 --> nclu = 26, kwan[ka] = 7
Loop npass = 5: (ka,kb) = (91,99)
  for(j ..) -> jma=3, jtel(.,z) = (5, 4) --> splitting: ka=91, ner[ka]=6 => (nzf, jtel2, jres, km) = (0, 5, 4, 96)
 --> nclu = 27, kwan[ka] = 4
Loop npass = 5: (ka,kb) = (100,105)
  for(j ..) -> jma=30, jtel(.,z) = (2, 4) --> splitting: ka=100, ner[ka]=7 => (nzf, jtel2, jres, km) = (1, 4, 2, 104)
 --> nclu = 28, kwan[ka] = 2
Loop npass = 5: (ka,kb) = (106,117)
  for(j ..) -> jma=16, jtel(.,z) = (7, 5) --> splitting: ka=106, ner[ka]=8 => (nzf, jtel2, jres, km) = (1, 5, 7, 111)
 --> nclu = 29, kwan[ka] = 7
Loop npass = 5: (ka,kb) = (118,136)
  for(j ..) -> jma=25, jtel(.,z) = (8, 11) --> splitting: ka=118, ner[ka]=9 => (nzf, jtel2, jres, km) = (1, 11, 8, 129)
 --> nclu = 30, kwan[ka] = 8
L500; found kwan[1] = 5 >= 2  ==> Loop again
Loop npass = 6: (ka,kb) = (1,5)
  for(j ..) -> jma=27, jtel(.,z) = (3, 2) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (1, 2, 3, 3)
 --> nclu = 31, kwan[ka] = 3
Loop npass = 6: (ka,kb) = (6,11)
  for(j ..) -> jma=3, jtel(.,z) = (5, 1) --> splitting: ka=6, ner[ka]=72 => (nzf, jtel2, jres, km) = (0, 5, 1, 11)
 --> nclu = 32, kwan[ka] = 1
Loop npass = 6: (ka,kb) = (12,16)
  for(j ..) -> jma=24, jtel(.,z) = (4, 1) --> splitting: ka=12, ner[ka]=19 => (nzf, jtel2, jres, km) = (0, 4, 1, 16)
 --> nclu = 33, kwan[ka] = 1
Loop npass = 6: (ka,kb) = (17,20)
  for(j ..) -> jma=3, jtel(.,z) = (2, 2) --> splitting: ka=17, ner[ka]=55 => (nzf, jtel2, jres, km) = (0, 2, 2, 19)
 --> nclu = 34, kwan[ka] = 2
Loop npass = 6: (ka,kb) = (21,26)
  for(j ..) -> jma=1, jtel(.,z) = (3, 3) --> splitting: ka=21, ner[ka]=31 => (nzf, jtel2, jres, km) = (1, 3, 3, 24)
 --> nclu = 35, kwan[ka] = 3
Loop npass = 6: (ka,kb) = (27,28)
  for(j ..) -> jma=2, jtel(.,z) = (1, 1) --> splitting: ka=27, ner[ka]=105 => (nzf, jtel2, jres, km) = (0, 1, 1, 28)
 --> nclu = 36, kwan[ka] = 1
Loop npass = 6: (ka,kb) = (30,33)
  for(j ..) -> jma=3, jtel(.,z) = (2, 2) --> splitting: ka=30, ner[ka]=70 => (nzf, jtel2, jres, km) = (1, 2, 2, 32)
 --> nclu = 37, kwan[ka] = 2
Loop npass = 6: (ka,kb) = (34,35)
  for(j ..) -> jma=2, jtel(.,z) = (1, 1) --> splitting: ka=34, ner[ka]=14 => (nzf, jtel2, jres, km) = (1, 1, 1, 35)
 --> nclu = 38, kwan[ka] = 1
Loop npass = 6: (ka,kb) = (36,39)
  for(j ..) -> jma=8, jtel(.,z) = (3, 1) --> splitting: ka=36, ner[ka]=20 => (nzf, jtel2, jres, km) = (0, 3, 1, 39)
 --> nclu = 39, kwan[ka] = 1
Loop npass = 6: (ka,kb) = (44,51)
  for(j ..) -> jma=5, jtel(.,z) = (3, 5) --> splitting: ka=44, ner[ka]=3 => (nzf, jtel2, jres, km) = (1, 5, 3, 49)
 --> nclu = 40, kwan[ka] = 3
Loop npass = 6: (ka,kb) = (52,56)
  for(j ..) -> jma=31, jtel(.,z) = (2, 3) --> splitting: ka=52, ner[ka]=21 => (nzf, jtel2, jres, km) = (0, 2, 3, 54)
 --> nclu = 41, kwan[ka] = 3
Loop npass = 6: (ka,kb) = (57,61)
  for(j ..) -> jma=9, jtel(.,z) = (3, 2) --> splitting: ka=57, ner[ka]=10 => (nzf, jtel2, jres, km) = (1, 2, 3, 59)
 --> nclu = 42, kwan[ka] = 3
Loop npass = 6: (ka,kb) = (62,64)
  for(j ..) -> jma=1, jtel(.,z) = (2, 1) --> splitting: ka=62, ner[ka]=62 => (nzf, jtel2, jres, km) = (0, 2, 1, 64)
 --> nclu = 43, kwan[ka] = 1
Loop npass = 6: (ka,kb) = (65,71)
  for(j ..) -> jma=1, jtel(.,z) = (4, 3) --> splitting: ka=65, ner[ka]=5 => (nzf, jtel2, jres, km) = (0, 4, 3, 69)
 --> nclu = 44, kwan[ka] = 3
Loop npass = 6: (ka,kb) = (72,76)
  for(j ..) -> jma=3, jtel(.,z) = (1, 4) --> splitting: ka=72, ner[ka]=26 => (nzf, jtel2, jres, km) = (1, 4, 1, 76)
 --> nclu = 45, kwan[ka] = 1
Loop npass = 6: (ka,kb) = (77,83)
  for(j ..) -> jma=3, jtel(.,z) = (4, 3) --> splitting: ka=77, ner[ka]=42 => (nzf, jtel2, jres, km) = (1, 3, 4, 80)
 --> nclu = 46, kwan[ka] = 4
Loop npass = 6: (ka,kb) = (84,90)
  for(j ..) -> jma=26, jtel(.,z) = (3, 4) --> splitting: ka=84, ner[ka]=49 => (nzf, jtel2, jres, km) = (1, 4, 3, 88)
 --> nclu = 47, kwan[ka] = 3
Loop npass = 6: (ka,kb) = (91,95)
  for(j ..) -> jma=21, jtel(.,z) = (2, 3) --> splitting: ka=91, ner[ka]=6 => (nzf, jtel2, jres, km) = (1, 3, 2, 94)
 --> nclu = 48, kwan[ka] = 2
Loop npass = 6: (ka,kb) = (96,99)
  for(j ..) -> jma=14, jtel(.,z) = (1, 3) --> splitting: ka=96, ner[ka]=22 => (nzf, jtel2, jres, km) = (1, 3, 1, 99)
 --> nclu = 49, kwan[ka] = 1
Loop npass = 6: (ka,kb) = (100,103)
  for(j ..) -> jma=10, jtel(.,z) = (2, 2) --> splitting: ka=100, ner[ka]=7 => (nzf, jtel2, jres, km) = (1, 2, 2, 102)
 --> nclu = 50, kwan[ka] = 2
Loop npass = 6: (ka,kb) = (104,105)
  for(j ..) -> jma=6, jtel(.,z) = (1, 1) --> splitting: ka=104, ner[ka]=64 => (nzf, jtel2, jres, km) = (0, 1, 1, 105)
 --> nclu = 51, kwan[ka] = 1
Loop npass = 6: (ka,kb) = (106,110)
  for(j ..) -> jma=8, jtel(.,z) = (2, 3) --> splitting: ka=106, ner[ka]=8 => (nzf, jtel2, jres, km) = (1, 3, 2, 109)
 --> nclu = 52, kwan[ka] = 2
Loop npass = 6: (ka,kb) = (111,117)
  for(j ..) -> jma=6, jtel(.,z) = (4, 3) --> splitting: ka=111, ner[ka]=43 => (nzf, jtel2, jres, km) = (0, 4, 3, 115)
 --> nclu = 53, kwan[ka] = 3
Loop npass = 6: (ka,kb) = (118,128)
  for(j ..) -> jma=8, jtel(.,z) = (5, 6) --> splitting: ka=118, ner[ka]=9 => (nzf, jtel2, jres, km) = (0, 5, 6, 123)
 --> nclu = 54, kwan[ka] = 6
Loop npass = 6: (ka,kb) = (129,136)
  for(j ..) -> jma=28, jtel(.,z) = (3, 5) --> splitting: ka=129, ner[ka]=11 => (nzf, jtel2, jres, km) = (0, 3, 5, 132)
 --> nclu = 55, kwan[ka] = 5
L500; found kwan[1] = 2 >= 2  ==> Loop again
Loop npass = 7: (ka,kb) = (1,2)
  for(j ..) -> jma=28, jtel(.,z) = (3, 5) --> _NO_ splitting
 --> nclu = 55, kwan[ka] = -2
Loop npass = 7: (ka,kb) = (3,5)
  for(j ..) -> jma=1, jtel(.,z) = (1, 2) --> splitting: ka=3, ner[ka]=30 => (nzf, jtel2, jres, km) = (1, 2, 1, 5)
 --> nclu = 56, kwan[ka] = 1
Loop npass = 7: (ka,kb) = (6,10)
  for(j ..) -> jma=27, jtel(.,z) = (4, 1) --> splitting: ka=6, ner[ka]=72 => (nzf, jtel2, jres, km) = (0, 4, 1, 10)
 --> nclu = 57, kwan[ka] = 1
Loop npass = 7: (ka,kb) = (12,15)
  for(j ..) -> jma=5, jtel(.,z) = (3, 1) --> splitting: ka=12, ner[ka]=19 => (nzf, jtel2, jres, km) = (1, 1, 3, 13)
 --> nclu = 58, kwan[ka] = 3
Loop npass = 7: (ka,kb) = (17,18)
  for(j ..) -> jma=5, jtel(.,z) = (1, 1) --> splitting: ka=17, ner[ka]=55 => (nzf, jtel2, jres, km) = (1, 1, 1, 18)
 --> nclu = 59, kwan[ka] = 1
Loop npass = 7: (ka,kb) = (19,20)
  for(j ..) -> jma=4, jtel(.,z) = (1, 1) --> splitting: ka=19, ner[ka]=112 => (nzf, jtel2, jres, km) = (0, 1, 1, 20)
 --> nclu = 60, kwan[ka] = 1
Loop npass = 7: (ka,kb) = (21,23)
  for(j ..) -> jma=8, jtel(.,z) = (2, 1) --> splitting: ka=21, ner[ka]=31 => (nzf, jtel2, jres, km) = (0, 2, 1, 23)
 --> nclu = 61, kwan[ka] = 1
Loop npass = 7: (ka,kb) = (24,26)
  for(j ..) -> jma=2, jtel(.,z) = (2, 1) --> splitting: ka=24, ner[ka]=93 => (nzf, jtel2, jres, km) = (0, 2, 1, 26)
 --> nclu = 62, kwan[ka] = 1
Loop npass = 7: (ka,kb) = (30,31)
  for(j ..) -> jma=8, jtel(.,z) = (1, 1) --> splitting: ka=30, ner[ka]=70 => (nzf, jtel2, jres, km) = (0, 1, 1, 31)
 --> nclu = 63, kwan[ka] = 1
Loop npass = 7: (ka,kb) = (32,33)
  for(j ..) -> jma=8, jtel(.,z) = (1, 1) --> splitting: ka=32, ner[ka]=103 => (nzf, jtel2, jres, km) = (0, 1, 1, 33)
 --> nclu = 64, kwan[ka] = 1
Loop npass = 7: (ka,kb) = (36,38)
  for(j ..) -> jma=8, jtel(.,z) = (1, 1) --> _NO_ splitting
 --> nclu = 64, kwan[ka] = -3
Loop npass = 7: (ka,kb) = (44,48)
  for(j ..) -> jma=15, jtel(.,z) = (3, 2) --> splitting: ka=44, ner[ka]=3 => (nzf, jtel2, jres, km) = (1, 2, 3, 46)
 --> nclu = 65, kwan[ka] = 3
Loop npass = 7: (ka,kb) = (49,51)
  for(j ..) -> jma=2, jtel(.,z) = (2, 1) --> splitting: ka=49, ner[ka]=35 => (nzf, jtel2, jres, km) = (0, 2, 1, 51)
 --> nclu = 66, kwan[ka] = 1
Loop npass = 7: (ka,kb) = (52,53)
  for(j ..) -> jma=5, jtel(.,z) = (1, 1) --> splitting: ka=52, ner[ka]=21 => (nzf, jtel2, jres, km) = (0, 1, 1, 53)
 --> nclu = 67, kwan[ka] = 1
Loop npass = 7: (ka,kb) = (54,56)
  for(j ..) -> jma=1, jtel(.,z) = (2, 1) --> splitting: ka=54, ner[ka]=71 => (nzf, jtel2, jres, km) = (1, 1, 2, 55)
 --> nclu = 68, kwan[ka] = 2
Loop npass = 7: (ka,kb) = (57,58)
  for(j ..) -> jma=1, jtel(.,z) = (1, 1) --> splitting: ka=57, ner[ka]=10 => (nzf, jtel2, jres, km) = (0, 1, 1, 58)
 --> nclu = 69, kwan[ka] = 1
Loop npass = 7: (ka,kb) = (59,61)
  for(j ..) -> jma=15, jtel(.,z) = (2, 1) --> splitting: ka=59, ner[ka]=15 => (nzf, jtel2, jres, km) = (0, 2, 1, 61)
 --> nclu = 70, kwan[ka] = 1
Loop npass = 7: (ka,kb) = (62,63)
  for(j ..) -> jma=4, jtel(.,z) = (1, 1) --> splitting: ka=62, ner[ka]=62 => (nzf, jtel2, jres, km) = (0, 1, 1, 63)
 --> nclu = 71, kwan[ka] = 1
Loop npass = 7: (ka,kb) = (65,68)
  for(j ..) -> jma=2, jtel(.,z) = (1, 3) --> splitting: ka=65, ner[ka]=5 => (nzf, jtel2, jres, km) = (1, 3, 1, 68)
 --> nclu = 72, kwan[ka] = 1
Loop npass = 7: (ka,kb) = (69,71)
  for(j ..) -> jma=2, jtel(.,z) = (2, 1) --> splitting: ka=69, ner[ka]=53 => (nzf, jtel2, jres, km) = (0, 2, 1, 71)
 --> nclu = 73, kwan[ka] = 1
Loop npass = 7: (ka,kb) = (72,75)
  for(j ..) -> jma=4, jtel(.,z) = (3, 1) --> splitting: ka=72, ner[ka]=26 => (nzf, jtel2, jres, km) = (1, 1, 3, 73)
 --> nclu = 74, kwan[ka] = 3
Loop npass = 7: (ka,kb) = (77,79)
  for(j ..) -> jma=2, jtel(.,z) = (1, 2) --> splitting: ka=77, ner[ka]=42 => (nzf, jtel2, jres, km) = (0, 1, 2, 78)
 --> nclu = 75, kwan[ka] = 2
Loop npass = 7: (ka,kb) = (80,83)
  for(j ..) -> jma=1, jtel(.,z) = (2, 2) --> splitting: ka=80, ner[ka]=107 => (nzf, jtel2, jres, km) = (0, 2, 2, 82)
 --> nclu = 76, kwan[ka] = 2
Loop npass = 7: (ka,kb) = (84,87)
  for(j ..) -> jma=6, jtel(.,z) = (1, 3) --> splitting: ka=84, ner[ka]=49 => (nzf, jtel2, jres, km) = (1, 3, 1, 87)
 --> nclu = 77, kwan[ka] = 1
Loop npass = 7: (ka,kb) = (88,90)
  for(j ..) -> jma=1, jtel(.,z) = (1, 2) --> splitting: ka=88, ner[ka]=92 => (nzf, jtel2, jres, km) = (0, 1, 2, 89)
 --> nclu = 78, kwan[ka] = 2
Loop npass = 7: (ka,kb) = (91,93)
  for(j ..) -> jma=2, jtel(.,z) = (2, 1) --> splitting: ka=91, ner[ka]=6 => (nzf, jtel2, jres, km) = (1, 1, 2, 92)
 --> nclu = 79, kwan[ka] = 2
Loop npass = 7: (ka,kb) = (94,95)
  for(j ..) -> jma=1, jtel(.,z) = (1, 1) --> splitting: ka=94, ner[ka]=75 => (nzf, jtel2, jres, km) = (1, 1, 1, 95)
 --> nclu = 80, kwan[ka] = 1
Loop npass = 7: (ka,kb) = (96,98)
  for(j ..) -> jma=2, jtel(.,z) = (1, 2) --> splitting: ka=96, ner[ka]=22 => (nzf, jtel2, jres, km) = (1, 2, 1, 98)
 --> nclu = 81, kwan[ka] = 1
Loop npass = 7: (ka,kb) = (100,101)
  for(j ..) -> jma=3, jtel(.,z) = (1, 1) --> splitting: ka=100, ner[ka]=7 => (nzf, jtel2, jres, km) = (0, 1, 1, 101)
 --> nclu = 82, kwan[ka] = 1
Loop npass = 7: (ka,kb) = (102,103)
  for(j ..) -> jma=3, jtel(.,z) = (1, 1) --> splitting: ka=102, ner[ka]=65 => (nzf, jtel2, jres, km) = (0, 1, 1, 103)
 --> nclu = 83, kwan[ka] = 1
Loop npass = 7: (ka,kb) = (106,108)
  for(j ..) -> jma=14, jtel(.,z) = (1, 2) --> splitting: ka=106, ner[ka]=8 => (nzf, jtel2, jres, km) = (1, 2, 1, 108)
 --> nclu = 84, kwan[ka] = 1
Loop npass = 7: (ka,kb) = (109,110)
  for(j ..) -> jma=2, jtel(.,z) = (1, 1) --> splitting: ka=109, ner[ka]=58 => (nzf, jtel2, jres, km) = (1, 1, 1, 110)
 --> nclu = 85, kwan[ka] = 1
Loop npass = 7: (ka,kb) = (111,114)
  for(j ..) -> jma=2, jtel(.,z) = (2, 2) --> splitting: ka=111, ner[ka]=43 => (nzf, jtel2, jres, km) = (1, 2, 2, 113)
 --> nclu = 86, kwan[ka] = 2
Loop npass = 7: (ka,kb) = (115,117)
  for(j ..) -> jma=2, jtel(.,z) = (2, 1) --> splitting: ka=115, ner[ka]=123 => (nzf, jtel2, jres, km) = (0, 2, 1, 117)
 --> nclu = 87, kwan[ka] = 1
Loop npass = 7: (ka,kb) = (118,122)
  for(j ..) -> jma=1, jtel(.,z) = (2, 3) --> splitting: ka=118, ner[ka]=9 => (nzf, jtel2, jres, km) = (0, 2, 3, 120)
 --> nclu = 88, kwan[ka] = 3
Loop npass = 7: (ka,kb) = (123,128)
  for(j ..) -> jma=28, jtel(.,z) = (2, 4) --> splitting: ka=123, ner[ka]=18 => (nzf, jtel2, jres, km) = (1, 4, 2, 127)
 --> nclu = 89, kwan[ka] = 2
Loop npass = 7: (ka,kb) = (129,131)
  for(j ..) -> jma=4, jtel(.,z) = (1, 2) --> splitting: ka=129, ner[ka]=11 => (nzf, jtel2, jres, km) = (1, 2, 1, 131)
 --> nclu = 90, kwan[ka] = 1
Loop npass = 7: (ka,kb) = (132,136)
  for(j ..) -> jma=8, jtel(.,z) = (3, 2) --> splitting: ka=132, ner[ka]=12 => (nzf, jtel2, jres, km) = (0, 3, 2, 135)
 --> nclu = 91, kwan[ka] = 2
L500; found kwan[3] = 2 >= 2  ==> Loop again
Loop npass = 8: (ka,kb) = (3,4)
  for(j ..) -> jma=3, jtel(.,z) = (1, 1) --> splitting: ka=3, ner[ka]=30 => (nzf, jtel2, jres, km) = (0, 1, 1, 4)
 --> nclu = 92, kwan[ka] = 1
Loop npass = 8: (ka,kb) = (6,9)
  for(j ..) -> jma=1, jtel(.,z) = (3, 1) --> splitting: ka=6, ner[ka]=72 => (nzf, jtel2, jres, km) = (0, 3, 1, 9)
 --> nclu = 93, kwan[ka] = 1
Loop npass = 8: (ka,kb) = (13,15)
  for(j ..) -> jma=1, jtel(.,z) = (2, 1) --> splitting: ka=13, ner[ka]=36 => (nzf, jtel2, jres, km) = (1, 1, 2, 14)
 --> nclu = 94, kwan[ka] = 2
Loop npass = 8: (ka,kb) = (21,22)
  for(j ..) -> jma=1, jtel(.,z) = (2, 1) --> _NO_ splitting
 --> nclu = 94, kwan[ka] = -2
Loop npass = 8: (ka,kb) = (24,25)
  for(j ..) -> jma=13, jtel(.,z) = (1, 1) --> splitting: ka=24, ner[ka]=93 => (nzf, jtel2, jres, km) = (1, 1, 1, 25)
 --> nclu = 95, kwan[ka] = 1
Loop npass = 8: (ka,kb) = (44,45)
  for(j ..) -> jma=7, jtel(.,z) = (1, 1) --> splitting: ka=44, ner[ka]=3 => (nzf, jtel2, jres, km) = (0, 1, 1, 45)
 --> nclu = 96, kwan[ka] = 1
Loop npass = 8: (ka,kb) = (46,48)
  for(j ..) -> jma=1, jtel(.,z) = (2, 1) --> splitting: ka=46, ner[ka]=83 => (nzf, jtel2, jres, km) = (0, 2, 1, 48)
 --> nclu = 97, kwan[ka] = 1
Loop npass = 8: (ka,kb) = (49,50)
  for(j ..) -> jma=15, jtel(.,z) = (1, 1) --> splitting: ka=49, ner[ka]=35 => (nzf, jtel2, jres, km) = (0, 1, 1, 50)
 --> nclu = 98, kwan[ka] = 1
Loop npass = 8: (ka,kb) = (55,56)
  for(j ..) -> jma=8, jtel(.,z) = (1, 1) --> splitting: ka=55, ner[ka]=108 => (nzf, jtel2, jres, km) = (1, 1, 1, 56)
 --> nclu = 99, kwan[ka] = 1
Loop npass = 8: (ka,kb) = (59,60)
  for(j ..) -> jma=1, jtel(.,z) = (1, 1) --> splitting: ka=59, ner[ka]=15 => (nzf, jtel2, jres, km) = (1, 1, 1, 60)
 --> nclu = 100, kwan[ka] = 1
Loop npass = 8: (ka,kb) = (65,67)
  for(j ..) -> jma=26, jtel(.,z) = (2, 1) --> splitting: ka=65, ner[ka]=5 => (nzf, jtel2, jres, km) = (0, 2, 1, 67)
 --> nclu = 101, kwan[ka] = 1
Loop npass = 8: (ka,kb) = (69,70)
  for(j ..) -> jma=7, jtel(.,z) = (1, 1) --> splitting: ka=69, ner[ka]=53 => (nzf, jtel2, jres, km) = (0, 1, 1, 70)
 --> nclu = 102, kwan[ka] = 1
Loop npass = 8: (ka,kb) = (73,75)
  for(j ..) -> jma=1, jtel(.,z) = (2, 1) --> splitting: ka=73, ner[ka]=37 => (nzf, jtel2, jres, km) = (0, 2, 1, 75)
 --> nclu = 103, kwan[ka] = 1
Loop npass = 8: (ka,kb) = (78,79)
  for(j ..) -> jma=1, jtel(.,z) = (1, 1) --> splitting: ka=78, ner[ka]=67 => (nzf, jtel2, jres, km) = (0, 1, 1, 79)
 --> nclu = 104, kwan[ka] = 1
Loop npass = 8: (ka,kb) = (80,81)
  for(j ..) -> jma=4, jtel(.,z) = (1, 1) --> splitting: ka=80, ner[ka]=107 => (nzf, jtel2, jres, km) = (1, 1, 1, 81)
 --> nclu = 105, kwan[ka] = 1
Loop npass = 8: (ka,kb) = (82,83)
  for(j ..) -> jma=2, jtel(.,z) = (1, 1) --> splitting: ka=82, ner[ka]=120 => (nzf, jtel2, jres, km) = (0, 1, 1, 83)
 --> nclu = 106, kwan[ka] = 1
Loop npass = 8: (ka,kb) = (84,86)
  for(j ..) -> jma=1, jtel(.,z) = (1, 2) --> splitting: ka=84, ner[ka]=49 => (nzf, jtel2, jres, km) = (1, 2, 1, 86)
 --> nclu = 107, kwan[ka] = 1
Loop npass = 8: (ka,kb) = (89,90)
  for(j ..) -> jma=2, jtel(.,z) = (1, 1) --> splitting: ka=89, ner[ka]=135 => (nzf, jtel2, jres, km) = (0, 1, 1, 90)
 --> nclu = 108, kwan[ka] = 1
Loop npass = 8: (ka,kb) = (92,93)
  for(j ..) -> jma=4, jtel(.,z) = (1, 1) --> splitting: ka=92, ner[ka]=16 => (nzf, jtel2, jres, km) = (0, 1, 1, 93)
 --> nclu = 109, kwan[ka] = 1
Loop npass = 8: (ka,kb) = (96,97)
  for(j ..) -> jma=1, jtel(.,z) = (1, 1) --> splitting: ka=96, ner[ka]=22 => (nzf, jtel2, jres, km) = (0, 1, 1, 97)
 --> nclu = 110, kwan[ka] = 1
Loop npass = 8: (ka,kb) = (106,107)
  for(j ..) -> jma=2, jtel(.,z) = (1, 1) --> splitting: ka=106, ner[ka]=8 => (nzf, jtel2, jres, km) = (0, 1, 1, 107)
 --> nclu = 111, kwan[ka] = 1
Loop npass = 8: (ka,kb) = (111,112)
  for(j ..) -> jma=3, jtel(.,z) = (1, 1) --> splitting: ka=111, ner[ka]=43 => (nzf, jtel2, jres, km) = (0, 1, 1, 112)
 --> nclu = 112, kwan[ka] = 1
Loop npass = 8: (ka,kb) = (113,114)
  for(j ..) -> jma=9, jtel(.,z) = (1, 1) --> splitting: ka=113, ner[ka]=76 => (nzf, jtel2, jres, km) = (0, 1, 1, 114)
 --> nclu = 113, kwan[ka] = 1
Loop npass = 8: (ka,kb) = (115,116)
  for(j ..) -> jma=1, jtel(.,z) = (1, 1) --> splitting: ka=115, ner[ka]=123 => (nzf, jtel2, jres, km) = (0, 1, 1, 116)
 --> nclu = 114, kwan[ka] = 1
Loop npass = 8: (ka,kb) = (118,119)
  for(j ..) -> jma=2, jtel(.,z) = (1, 1) --> splitting: ka=118, ner[ka]=9 => (nzf, jtel2, jres, km) = (0, 1, 1, 119)
 --> nclu = 115, kwan[ka] = 1
Loop npass = 8: (ka,kb) = (120,122)
  for(j ..) -> jma=9, jtel(.,z) = (2, 1) --> splitting: ka=120, ner[ka]=17 => (nzf, jtel2, jres, km) = (0, 2, 1, 122)
 --> nclu = 116, kwan[ka] = 1
Loop npass = 8: (ka,kb) = (123,126)
  for(j ..) -> jma=2, jtel(.,z) = (1, 3) --> splitting: ka=123, ner[ka]=18 => (nzf, jtel2, jres, km) = (1, 3, 1, 126)
 --> nclu = 117, kwan[ka] = 1
Loop npass = 8: (ka,kb) = (127,128)
  for(j ..) -> jma=1, jtel(.,z) = (1, 1) --> splitting: ka=127, ner[ka]=25 => (nzf, jtel2, jres, km) = (1, 1, 1, 128)
 --> nclu = 118, kwan[ka] = 1
Loop npass = 8: (ka,kb) = (129,130)
  for(j ..) -> jma=1, jtel(.,z) = (1, 1) --> splitting: ka=129, ner[ka]=11 => (nzf, jtel2, jres, km) = (1, 1, 1, 130)
 --> nclu = 119, kwan[ka] = 1
Loop npass = 8: (ka,kb) = (132,134)
  for(j ..) -> jma=2, jtel(.,z) = (1, 2) --> splitting: ka=132, ner[ka]=12 => (nzf, jtel2, jres, km) = (1, 2, 1, 134)
 --> nclu = 120, kwan[ka] = 1
Loop npass = 8: (ka,kb) = (135,136)
  for(j ..) -> jma=7, jtel(.,z) = (1, 1) --> splitting: ka=135, ner[ka]=60 => (nzf, jtel2, jres, km) = (0, 1, 1, 136)
 --> nclu = 121, kwan[ka] = 1
L500; found kwan[6] = 3 >= 2  ==> Loop again
Loop npass = 9: (ka,kb) = (6,8)
  for(j ..) -> jma=8, jtel(.,z) = (2, 1) --> splitting: ka=6, ner[ka]=72 => (nzf, jtel2, jres, km) = (0, 2, 1, 8)
 --> nclu = 122, kwan[ka] = 1
Loop npass = 9: (ka,kb) = (14,15)
  for(j ..) -> jma=8, jtel(.,z) = (2, 1) --> _NO_ splitting
 --> nclu = 122, kwan[ka] = -2
Loop npass = 9: (ka,kb) = (46,47)
  for(j ..) -> jma=2, jtel(.,z) = (1, 1) --> splitting: ka=46, ner[ka]=83 => (nzf, jtel2, jres, km) = (0, 1, 1, 47)
 --> nclu = 123, kwan[ka] = 1
Loop npass = 9: (ka,kb) = (65,66)
  for(j ..) -> jma=3, jtel(.,z) = (1, 1) --> splitting: ka=65, ner[ka]=5 => (nzf, jtel2, jres, km) = (0, 1, 1, 66)
 --> nclu = 124, kwan[ka] = 1
Loop npass = 9: (ka,kb) = (73,74)
  for(j ..) -> jma=9, jtel(.,z) = (1, 1) --> splitting: ka=73, ner[ka]=37 => (nzf, jtel2, jres, km) = (1, 1, 1, 74)
 --> nclu = 125, kwan[ka] = 1
Loop npass = 9: (ka,kb) = (84,85)
  for(j ..) -> jma=2, jtel(.,z) = (1, 1) --> splitting: ka=84, ner[ka]=49 => (nzf, jtel2, jres, km) = (0, 1, 1, 85)
 --> nclu = 126, kwan[ka] = 1
Loop npass = 9: (ka,kb) = (120,121)
  for(j ..) -> jma=4, jtel(.,z) = (1, 1) --> splitting: ka=120, ner[ka]=17 => (nzf, jtel2, jres, km) = (1, 1, 1, 121)
 --> nclu = 127, kwan[ka] = 1
Loop npass = 9: (ka,kb) = (123,125)
  for(j ..) -> jma=1, jtel(.,z) = (2, 1) --> splitting: ka=123, ner[ka]=18 => (nzf, jtel2, jres, km) = (1, 1, 2, 124)
 --> nclu = 128, kwan[ka] = 2
Loop npass = 9: (ka,kb) = (132,133)
  for(j ..) -> jma=3, jtel(.,z) = (1, 1) --> splitting: ka=132, ner[ka]=12 => (nzf, jtel2, jres, km) = (1, 1, 1, 133)
 --> nclu = 129, kwan[ka] = 1
L500; found kwan[6] = 2 >= 2  ==> Loop again
Loop npass = 10: (ka,kb) = (6,7)
  for(j ..) -> jma=13, jtel(.,z) = (1, 1) --> splitting: ka=6, ner[ka]=72 => (nzf, jtel2, jres, km) = (1, 1, 1, 7)
 --> nclu = 130, kwan[ka] = 1
Loop npass = 10: (ka,kb) = (124,125)
  for(j ..) -> jma=3, jtel(.,z) = (1, 1) --> splitting: ka=124, ner[ka]=24 => (nzf, jtel2, jres, km) = (0, 1, 1, 125)
 --> nclu = 131, kwan[ka] = 1
mona(x, ..) fit;  x of dimension 136x31
Because of NA's, revised data:
      pdias longindex durflow height begflow mycor vegaer vegsout autopoll
Aceca     0         1       1      0       1     0      1       1        1
Aceps     0         1       1      0       1     0      1       1        1
Agrca     1         0       1      1       0     0      1       0        1
Agrst     1         0       1      1       0     0      0       1        1
Ajure     1         0       1      1       1     0      0       1        0
Allpe     0         0       1      0       1     1      1       1        0
Anaar     1         0       1      1       0     0      1       1        0
Anene     0         1       1      1       1     0      1       0        0
Angsy     1         1       1      1       0     0      1       1        1
Antod     1         1       1      1       1     0      1       1        0
Arrel     0         1       0      0       0     0      1       0        0
Artvu     1         0       0      0       0     0      1       1        1
Aruma     0         1       1      1       1     0      1       0        1
Betsp     1         0       1      0       1     0      1       1        1
Brasy     0         1       1      1       0     0      1       0        1
Brost     0         1       1      1       1     1      1       1        0
Brydi     0         1       1      0       0     1      1       1        1
Calse     0         0       0      0       0     0      1       0        0
Calvu     1         0       1      1       0     0      1       1        1
Carbe     0         1       1      0       1     0      1       1        1
Cardi     1         0       1      1       1     1      1       1        1
Cheal     1         0       0      0       0     0      1       1        1
Chema     1         0       0      1       1     0      1       1        0
Cirar     1         0       1      1       0     0      1       0        1
Cirlu     0         1       1      1       0     0      1       0        0
Cirvu     0         1       0      0       0     0      1       1        1
Conmj     0         0       1      1       1     0      1       0        1
Corav     0         1       0      0       1     0      1       1        1
Cordi     0         0       0      1       0     1      1       1        0
Corsa     0         1       1      0       1     0      1       1        1
Crala     0         1       1      0       1     0      1       1        0
Cramo     0         1       1      0       1     0      1       1        0
Cucba     0         1       1      1       0     1      1       1        1
Cytsc     0         0       1      0       1     0      1       1        1
Dacgl     1         1       1      1       1     0      1       1        0
Dapla     0         0       1      1       1     0      1       1        1
Dauca     1         0       0      1       0     0      1       1        0
Desfl     1         1       1      1       0     0      1       1        1
Diaar     1         1       1      1       0     1      1       1        0
Digpu     1         0       0      1       0     0      1       1        1
Elyca     0         0       1      1       0     0      1       1        0
Epipa     0         1       0      1       0     0      0       1        0
Eupam     0         0       1      1       1     1      1       0        1
Evoeu     1         1       1      0       1     0      1       1        1
Fagsy     0         1       1      0       1     0      1       1        1
Fraal     0         1       0      0       1     0      1       1        1
Fraan     0         1       1      0       1     0      1       1        1
Frasp     0         1       1      0       1     0      1       1        1
Frave     0         1       1      1       1     0      0       1        0
Galap     0         1       1      0       0     0      1       1        0
Galmo     1         1       0      1       1     1      1       0        0
Gerro     0         1       0      1       1     0      1       1        0
Geuur     0         1       0      1       1     0      1       1        0
Glehe     1         1       1      1       1     0      0       1        1
Hedhe     0         1       1      0       0     0      0       1        1
Holla     1         0       1      1       0     0      1       1        0
Holmo     1         1       1      1       0     0      1       0        1
Hyahi     0         0       1      1       1     1      1       1        1
Hyano     0         1       1      1       1     0      1       1        1
Hyppe     1         0       1      1       0     0      1       0        0
Ileaq     0         1       1      0       1     0      1       1        1
Junco     1         0       1      1       1     1      1       1        0
Junef     1         0       1      0       0     1      1       0        0
Lacse     1         0       0      1       0     1      1       1        0
Lapco     1         0       1      1       0     0      1       1        0
Launo     1         0       1      0       1     0      1       1        1
Leuvu     1         0       0      1       0     0      1       1        0
Ligvu     0         1       1      0       0     0      1       1        0
Linre     0         0       0      1       1     1      1       0        1
Lonpe     1         1       0      0       0     0      1       1        0
Luzmu     0         0       1      1       1     1      1       1        1
Malsy     1         0       1      0       1     0      1       1        1
Medlu     0         0       0      1       1     0      1       1        0
Melof     0         1       1      1       0     1      1       1        0
Melpr     0         1       1      1       1     1      1       1        0
Melun     0         1       1      1       1     1      1       0        1
Meran     0         0       0      1       1     1      1       1        1
Milef     1         1       1      1       1     0      1       1        0
Molca     1         0       1      1       0     0      1       1        1
Paprh     1         0       1      1       1     1      1       1        1
Plama     1         0       0      1       0     0      1       1        0
Poaan     1         0       0      1       1     0      1       1        0
Poane     1         1       1      1       0     0      1       1        1
Poapr     1         0       1      1       1     0      1       0        0
Poatr     1         0       1      1       0     0      0       1        1
Polav     0         0       0      1       0     0      1       1        0
Polin     0         1       1      1       0     1      1       0        1
Polmu     0         1       1      1       1     1      1       0        0
Poptr     1         1       1      0       1     0      1       0        1
Potre     1         1       0      1       0     0      0       1        1
Potst     1         0       0      1       1     0      0       1        0
Privu     1         0       1      1       1     0      1       1        1
Pruav     1         1       1      0       1     0      1       1        0
Pruce     1         0       1      0       1     0      1       0        1
Prula     1         0       1      0       1     0      1       1        1
Prusi     0         1       1      0       1     0      1       0        0
Pteaq     1         1       1      0       0     0      1       0        1
Pyrsp     1         0       1      0       1     0      1       1        1
Queil     1         0       1      0       1     0      1       0        1
Ranac     0         1       0      1       1     0      0       1        1
Ranre     0         0       1      1       1     0      0       1        0
Robps     1         0       1      0       1     0      1       0        1
Rosar     1         1       1      0       0     0      1       1        0
Rosca     1         1       1      0       1     0      1       1        0
Rubca     0         1       0      1       0     0      0       1        0
Rubfr     1         1       0      0       0     0      1       0        0
Rubpe     1         1       1      0       0     1      1       0        1
Rumac     1         0       1      1       1     1      1       0        1
Rumco     1         0       1      1       1     1      1       1        0
Rumcr     0         0       1      1       0     0      1       1        1
Rumsa     1         0       1      1       0     1      1       1        1
Rusac     0         1       0      1       1     0      1       0        1
Samni     0         0       1      0       0     0      1       1        0
Scrno     1         0       0      1       0     0      1       0        1
Soldu     0         0       0      1       0     0      1       0        1
Sonol     1         0       0      1       0     0      1       1        0
Sordo     1         0       1      0       1     0      1       1        0
Sorto     0         0       1      0       1     0      1       1        1
Stasy     1         1       1      1       0     0      1       0        0
Steho     0         1       1      1       1     1      0       1        0
Steme     1         0       0      1       1     1      1       1        0
Symsp     1         1       1      0       0     0      1       0        0
Tamco     1         1       1      0       1     0      1       0        1
Tarsp     1         0       0      1       1     0      1       1        1
Taxba     1         0       1      0       1     0      0       0        1
Teusc     1         0       1      1       0     0      0       0        0
Trire     0         0       0      1       0     0      0       1        1
Ulemi     0         1       0      0       0     0      1       1        1
Ulmsp     0         1       1      0       1     0      1       0        1
Urtdi     1         0       0      0       0     1      1       0        1
Verch     1         1       1      1       1     0      1       0        0
Vicsa     0         0       1      0       1     0      1       1        0
Vicse     0         1       0      1       1     0      1       0        0
Vinmi     0         0       1      1       1     1      0       1        1
Viohi     0         1       1      1       1     0      1       1        0
Viore     0         0       1      1       1     1      1       1        0
      insects wind lign piq ros semiros leafy suman winan monocarp polycarp
Aceca       0    1    1   0   0       0     1     0     0        0        1
Aceps       0    1    1   0   0       0     1     0     0        0        1
Agrca       1    0    0   0   0       0     1     0     0        0        1
Agrst       1    0    0   0   0       0     1     0     0        0        1
Ajure       0    1    0   0   0       1     0     0     0        0        1
Allpe       0    1    0   0   0       1     0     1     0        1        0
Anaar       0    1    0   0   0       0     1     1     1        0        0
Anene       0    1    0   0   0       1     0     0     0        0        1
Angsy       0    1    0   0   0       1     0     0     0        1        1
Antod       1    0    0   0   0       0     1     0     0        0        1
Arrel       1    0    0   0   0       0     1     0     0        0        1
Artvu       1    0    0   0   0       0     1     0     0        0        1
Aruma       0    1    0   0   1       0     0     0     0        0        1
Betsp       1    0    1   0   0       0     1     0     0        0        1
Brasy       1    0    0   0   0       1     0     0     0        0        1
Brost       1    1    0   0   0       1     0     1     1        0        0
Brydi       0    1    0   0   0       0     1     0     0        0        1
Calse       0    1    0   0   0       0     1     0     0        0        1
Calvu       0    1    1   0   0       0     1     0     0        0        1
Carbe       1    0    1   0   0       0     1     0     0        0        1
Cardi       1    0    0   0   0       1     0     0     0        0        1
Cheal       1    0    0   0   0       0     1     1     0        0        0
Chema       0    1    0   0   0       1     0     0     0        0        1
Cirar       0    1    0   1   0       0     1     0     0        0        1
Cirlu       0    1    0   0   0       0     1     0     0        0        1
Cirvu       0    1    0   1   0       1     0     0     0        1        0
Conmj       0    1    0   0   0       1     0     0     0        0        1
Corav       1    0    1   0   0       0     1     0     0        0        1
Cordi       1    1    0   0   1       0     1     1     0        0        0
Corsa       0    1    1   0   0       0     1     0     0        0        1
Crala       0    1    1   1   0       0     1     0     0        0        1
Cramo       0    1    1   1   0       0     1     0     0        0        1
Cucba       0    1    0   0   0       0     1     0     0        0        1
Cytsc       0    1    1   0   0       0     1     0     0        0        1
Dacgl       1    0    0   0   0       1     0     0     0        0        1
Dapla       0    1    1   0   0       0     1     0     0        0        1
Dauca       0    1    0   0   0       1     0     0     0        1        0
Desfl       1    0    0   0   0       1     0     0     0        0        1
Diaar       1    1    0   0   0       1     0     1     0        1        0
Digpu       0    1    0   0   0       1     0     0     0        1        1
Elyca       1    0    0   0   0       0     1     0     0        0        1
Epipa       1    1    0   0   0       0     1     0     0        0        1
Eupam       0    1    0   0   0       0     1     0     0        0        1
Evoeu       0    1    1   0   0       0     1     0     0        0        1
Fagsy       1    0    1   0   0       0     1     0     0        0        1
Fraal       0    1    1   0   0       0     1     0     0        0        1
Fraan       1    0    1   0   0       0     1     0     0        0        1
Frasp       1    0    1   0   0       0     1     0     0        0        1
Frave       0    1    0   0   1       0     0     0     0        0        1
Galap       0    1    0   0   0       0     1     1     1        0        0
Galmo       0    1    0   0   0       0     1     1     0        0        0
Gerro       1    1    0   0   0       1     0     0     0        1        1
Geuur       1    1    0   0   0       1     0     0     0        0        1
Glehe       0    1    0   0   0       1     0     0     0        0        1
Hedhe       0    1    1   0   0       0     1     0     0        0        1
Holla       1    0    0   0   0       0     1     0     0        0        1
Holmo       1    0    0   0   0       0     1     0     0        0        1
Hyahi       0    1    0   0   1       0     0     0     0        0        1
Hyano       0    1    0   0   1       0     0     0     0        0        1
Hyppe       0    1    0   0   0       0     1     0     0        0        1
Ileaq       0    1    1   1   0       0     1     0     0        0        1
Junco       1    0    0   0   1       0     1     0     0        0        1
Junef       1    0    0   0   1       1     1     0     0        0        1
Lacse       1    1    0   1   0       1     0     1     0        1        0
Lapco       1    1    0   0   0       1     0     1     1        0        0
Launo       0    1    1   0   0       0     1     0     0        0        1
Leuvu       0    1    0   0   0       0     1     0     0        0        1
Ligvu       0    1    1   0   0       0     1     0     0        0        1
Linre       0    1    0   0   0       0     1     0     0        0        1
Lonpe       0    1    1   0   0       0     1     0     0        0        1
Luzmu       0    0    0   0   0       1     0     0     0        0        1
Malsy       0    1    1   0   0       0     1     0     0        0        1
Medlu       0    1    0   0   0       0     1     1     1        0        1
Melof       0    1    0   0   0       0     1     0     0        0        1
Melpr       0    1    0   0   0       0     1     1     0        0        0
Melun       1    0    0   0   0       0     1     0     0        0        1
Meran       1    0    0   0   1       0     1     1     1        0        0
Milef       1    0    0   0   0       0     1     0     0        0        1
Molca       1    0    0   0   0       1     0     0     0        0        1
Paprh       0    1    0   0   0       1     0     1     1        0        0
Plama       1    0    0   0   1       0     0     0     0        0        1
Poaan       1    1    0   0   0       1     0     1     1        0        1
Poane       1    0    0   0   0       1     0     0     0        0        1
Poapr       1    0    0   0   0       1     0     0     0        0        1
Poatr       1    0    0   0   0       1     0     0     0        0        1
Polav       0    1    0   0   0       0     1     1     0        0        0
Polin       1    1    0   0   1       0     0     0     0        0        1
Polmu       0    1    0   0   0       0     1     0     0        0        1
Poptr       1    0    1   0   0       0     1     0     0        0        1
Potre       0    1    0   0   0       0     1     0     0        0        1
Potst       0    1    0   0   0       1     0     0     0        0        1
Privu       0    1    0   0   1       0     0     0     0        0        1
Pruav       0    1    1   0   0       0     1     0     0        0        1
Pruce       0    1    1   0   0       0     1     0     0        0        1
Prula       0    1    1   0   0       0     1     0     0        0        1
Prusi       0    1    1   1   0       0     1     0     0        0        1
Pteaq       1    1    0   0   1       0     0     0     0        0        1
Pyrsp       0    1    1   1   0       0     1     0     0        0        1
Queil       1    0    1   1   0       0     1     0     0        0        1
Ranac       0    1    0   0   0       1     0     0     0        0        1
Ranre       0    1    0   0   0       1     0     0     0        0        1
Robps       0    1    1   1   0       0     1     0     0        0        1
Rosar       0    1    1   1   0       0     1     0     0        0        1
Rosca       0    1    1   1   0       0     1     0     0        0        1
Rubca       0    1    1   1   0       0     1     0     0        0        1
Rubfr       0    1    1   1   0       0     1     0     0        0        1
Rubpe       0    1    0   0   0       0     1     0     0        0        1
Rumac       1    0    0   0   0       1     0     0     0        0        1
Rumco       1    0    0   0   0       1     0     0     0        1        1
Rumcr       1    0    0   0   0       1     0     1     1        0        1
Rumsa       1    0    0   0   0       1     0     0     0        0        1
Rusac       0    1    1   1   0       0     1     0     0        0        1
Samni       1    1    1   0   0       0     1     0     0        0        1
Scrno       0    1    0   0   0       0     1     0     0        0        1
Soldu       0    1    1   0   0       0     1     0     0        0        1
Sonol       1    1    0   0   0       1     0     1     1        0        0
Sordo       0    1    1   0   0       0     1     0     0        0        1
Sorto       0    1    1   0   0       0     1     0     0        0        1
Stasy       0    1    0   0   0       0     1     0     0        0        1
Steho       0    1    0   0   0       0     1     0     0        0        1
Steme       0    1    0   0   0       0     1     1     1        0        0
Symsp       0    1    1   0   0       0     1     0     0        0        1
Tamco       0    1    0   0   0       0     1     0     0        0        1
Tarsp       0    1    0   0   1       0     0     0     0        0        1
Taxba       1    0    1   0   0       0     1     0     0        0        1
Teusc       0    1    0   0   0       0     1     0     0        0        1
Trire       0    1    0   0   1       0     0     0     0        0        1
Ulemi       0    1    1   1   0       0     1     0     0        0        1
Ulmsp       1    0    1   0   0       0     1     0     0        0        1
Urtdi       1    0    0   1   0       0     1     0     0        0        1
Verch       0    1    0   0   0       0     1     0     0        0        1
Vicsa       1    1    0   0   0       0     1     0     1        0        0
Vicse       0    1    0   0   0       0     1     0     0        0        1
Vinmi       0    1    0   0   0       0     1     0     0        0        1
Viohi       0    1    0   0   1       0     0     0     0        0        1
Viore       0    1    0   0   1       0     0     0     0        0        1
      seasaes seashiv seasver everalw everparti elaio endozoo epizoo aquat
Aceca       1       0       0       0         0     0       0      0     0
Aceps       1       0       0       0         0     0       0      0     0
Agrca       0       0       0       1         0     0       0      0     0
Agrst       0       0       0       1         0     0       0      0     0
Ajure       0       0       0       1         0     1       0      0     0
Allpe       0       1       0       0         0     0       0      0     0
Anaar       0       0       0       0         1     0       0      0     0
Anene       0       0       1       0         0     0       0      1     0
Angsy       1       0       0       0         0     0       0      0     1
Antod       0       0       0       1         0     0       0      1     0
Arrel       0       0       0       0         1     0       0      1     0
Artvu       0       0       0       0         1     0       0      0     0
Aruma       0       0       1       0         0     0       1      0     0
Betsp       1       0       0       0         0     0       0      0     0
Brasy       0       0       0       1         0     0       0      1     0
Brost       0       1       0       0         0     0       0      1     0
Brydi       1       0       0       0         0     0       1      0     0
Calse       1       0       0       0         0     0       0      0     0
Calvu       0       0       0       1         0     0       0      0     0
Carbe       1       0       0       0         0     0       0      0     0
Cardi       0       0       0       1         0     0       0      0     0
Cheal       1       0       0       0         0     0       0      0     0
Chema       0       0       0       1         0     1       0      0     0
Cirar       0       0       0       0         0     0       0      0     0
Cirlu       1       0       0       0         0     0       0      1     0
Cirvu       0       0       0       1         0     0       0      0     0
Conmj       0       0       1       0         0     0       0      0     0
Corav       1       0       0       0         0     0       1      0     0
Cordi       1       0       0       0         0     0       1      1     0
Corsa       1       0       0       0         0     0       1      0     0
Crala       1       0       0       0         0     0       1      0     0
Cramo       1       0       0       0         0     0       1      0     0
Cucba       1       0       0       0         0     0       1      0     0
Cytsc       0       0       0       0         1     1       0      0     0
Dacgl       0       0       0       1         0     0       0      0     0
Dapla       0       0       0       1         0     0       1      0     0
Dauca       0       0       0       1         0     0       0      1     0
Desfl       0       0       0       1         0     0       0      1     0
Diaar       1       1       0       1         1     0       1      1     1
Digpu       0       0       0       1         0     0       0      0     0
Elyca       0       0       0       1         0     0       0      1     0
Epipa       0       0       0       1         0     0       0      0     0
Eupam       0       0       0       0         1     1       0      0     0
Evoeu       1       0       0       0         0     1       1      0     0
Fagsy       1       0       0       0         0     0       1      0     0
Fraal       1       0       0       0         0     0       1      0     0
Fraan       1       0       0       0         0     0       0      0     0
Frasp       1       0       0       0         0     0       0      0     0
Frave       0       0       0       1         0     0       1      1     0
Galap       0       1       0       0         0     0       0      1     0
Galmo       1       0       0       0         0     0       0      0     0
Gerro       0       0       0       1         0     0       0      1     0
Geuur       0       0       0       1         0     0       0      1     0
Glehe       0       0       0       1         0     0       0      0     0
Hedhe       0       0       0       1         0     0       1      0     0
Holla       0       0       0       0         1     0       0      0     0
Holmo       0       0       0       1         0     0       0      1     0
Hyahi       0       0       1       0         0     0       0      0     0
Hyano       0       0       1       0         0     0       0      0     0
Hyppe       0       0       0       0         1     0       0      0     0
Ileaq       0       0       0       1         0     0       1      0     0
Junco       0       0       0       1         0     0       0      1     0
Junef       0       0       0       1         0     0       0      1     0
Lacse       0       0       0       0         1     0       0      0     0
Lapco       0       0       0       0         1     0       0      0     0
Launo       0       0       0       1         0     0       1      0     0
Leuvu       0       0       0       1         0     0       0      0     0
Ligvu       0       0       0       0         1     0       1      0     0
Linre       1       0       0       0         0     1       1      1     0
Lonpe       0       0       0       0         1     0       1      0     0
Luzmu       0       0       0       1         0     1       0      0     0
Malsy       1       0       0       0         0     0       1      0     0
Medlu       0       0       0       1         0     0       0      0     0
Melof       1       0       0       0         0     0       0      0     0
Melpr       1       0       0       0         0     1       0      0     0
Melun       1       0       0       0         0     1       0      0     0
Meran       1       1       1       1         0     1       1      1     0
Milef       0       0       0       1         0     0       0      0     0
Molca       1       0       0       0         0     0       0      0     0
Paprh       1       0       0       0         0     0       0      0     0
Plama       0       0       0       0         1     0       0      1     0
Poaan       0       0       0       0         1     0       0      0     0
Poane       0       0       0       1         0     0       0      0     0
Poapr       0       0       0       1         0     0       0      0     0
Poatr       0       0       0       1         0     0       0      0     0
Polav       1       0       0       0         0     0       0      0     0
Polin       0       0       0       1         0     0       0      0     0
Polmu       0       0       1       0         0     0       1      0     0
Poptr       1       0       0       0         0     0       0      0     0
Potre       0       0       0       0         1     0       0      0     0
Potst       0       0       0       1         0     0       0      0     0
Privu       0       0       0       1         0     1       0      0     0
Pruav       1       0       0       0         0     0       1      0     0
Pruce       1       0       0       0         0     0       1      0     0
Prula       0       0       0       1         0     0       1      0     0
Prusi       1       0       0       0         0     0       1      0     0
Pteaq       1       0       0       0         0     0       0      0     0
Pyrsp       1       0       0       0         0     0       1      0     0
Queil       0       0       0       0         1     0       1      0     0
Ranac       0       0       0       1         0     0       0      1     0
Ranre       0       0       0       1         0     0       0      1     1
Robps       1       0       0       0         0     0       0      0     0
Rosar       0       0       0       0         1     0       1      0     0
Rosca       1       0       0       0         0     0       1      0     0
Rubca       1       0       0       0         0     0       1      0     0
Rubfr       0       0       0       0         1     0       1      0     0
Rubpe       0       0       0       1         0     0       1      0     0
Rumac       0       0       0       1         0     0       0      0     0
Rumco       0       0       0       1         0     0       0      0     1
Rumcr       0       0       0       1         0     0       0      0     0
Rumsa       0       0       0       1         0     0       0      0     0
Rusac       0       0       0       1         0     0       1      0     0
Samni       1       0       0       0         0     0       1      0     0
Scrno       1       0       0       0         0     0       0      0     0
Soldu       1       0       0       0         0     0       1      0     0
Sonol       0       0       0       0         1     0       0      0     0
Sordo       1       0       0       0         0     0       1      0     0
Sorto       1       0       0       0         0     0       1      0     0
Stasy       1       0       0       0         0     0       0      1     0
Steho       0       0       0       1         0     0       0      0     0
Steme       0       0       0       0         1     0       0      0     0
Symsp       0       0       0       0         1     0       1      0     0
Tamco       1       0       0       0         0     0       1      0     0
Tarsp       0       0       0       1         0     0       0      0     0
Taxba       0       0       0       1         0     0       1      0     0
Teusc       0       0       0       0         1     0       0      0     0
Trire       0       0       0       1         0     0       0      1     0
Ulemi       0       0       0       1         0     1       0      0     0
Ulmsp       1       0       0       0         0     0       0      0     0
Urtdi       0       0       0       0         1     0       0      1     0
Verch       0       0       0       1         0     0       0      0     0
Vicsa       0       1       0       0         0     0       0      0     0
Vicse       1       0       0       0         0     0       0      0     0
Vinmi       0       0       0       1         0     1       1      1     0
Viohi       0       0       0       1         0     1       0      0     0
Viore       0       0       0       1         0     1       0      0     0
      windgl unsp
Aceca      1    0
Aceps      1    0
Agrca      0    1
Agrst      0    1
Ajure      0    0
Allpe      0    1
Anaar      0    1
Anene      0    0
Angsy      0    0
Antod      0    0
Arrel      0    0
Artvu      0    1
Aruma      0    0
Betsp      1    0
Brasy      0    0
Brost      0    0
Brydi      0    0
Calse      1    0
Calvu      1    0
Carbe      1    0
Cardi      0    1
Cheal      0    1
Chema      0    0
Cirar      1    0
Cirlu      0    0
Cirvu      1    0
Conmj      0    1
Corav      0    0
Cordi      1    1
Corsa      0    0
Crala      0    0
Cramo      0    0
Cucba      0    0
Cytsc      0    1
Dacgl      0    1
Dapla      0    0
Dauca      0    0
Desfl      0    0
Diaar      1    1
Digpu      1    0
Elyca      0    0
Epipa      1    0
Eupam      0    0
Evoeu      0    0
Fagsy      0    0
Fraal      0    0
Fraan      1    0
Frasp      1    0
Frave      0    0
Galap      0    0
Galmo      0    1
Gerro      0    0
Geuur      0    0
Glehe      0    1
Hedhe      0    0
Holla      0    1
Holmo      0    0
Hyahi      0    1
Hyano      0    1
Hyppe      1    0
Ileaq      0    0
Junco      0    0
Junef      0    0
Lacse      1    0
Lapco      0    1
Launo      0    0
Leuvu      0    1
Ligvu      0    0
Linre      0    1
Lonpe      0    0
Luzmu      0    0
Malsy      0    0
Medlu      0    1
Melof      0    1
Melpr      0    0
Melun      0    0
Meran      0    1
Milef      0    1
Molca      0    1
Paprh      1    0
Plama      0    0
Poaan      0    1
Poane      0    1
Poapr      0    1
Poatr      0    1
Polav      0    1
Polin      1    0
Polmu      0    0
Poptr      1    0
Potre      0    1
Potst      0    1
Privu      0    0
Pruav      0    0
Pruce      0    0
Prula      0    0
Prusi      0    0
Pteaq      1    0
Pyrsp      0    0
Queil      0    0
Ranac      0    0
Ranre      0    0
Robps      0    1
Rosar      0    0
Rosca      0    0
Rubca      0    0
Rubfr      0    0
Rubpe      0    0
Rumac      1    0
Rumco      0    0
Rumcr      0    1
Rumsa      0    1
Rusac      0    0
Samni      0    0
Scrno      1    0
Soldu      0    0
Sonol      1    0
Sordo      0    0
Sorto      0    0
Stasy      0    0
Steho      0    1
Steme      0    1
Symsp      0    0
Tamco      0    0
Tarsp      1    0
Taxba      0    0
Teusc      0    1
Trire      0    0
Ulemi      0    1
Ulmsp      1    0
Urtdi      0    0
Verch      0    1
Vicsa      0    1
Vicse      0    1
Vinmi      0    1
Viohi      0    0
Viore      0    0
Order of objects:
  [1] Aceca Aceps Corsa Fraal Evoeu Malsy Pyrsp Pruce Sorto Robps Soldu Calvu
 [13] Dapla Launo Prula Cytsc Hedhe Ileaq Rusac Ulemi Crala Cramo Prusi Pruav
 [25] Rosca Sordo Rubca Samni Ligvu Lonpe Rubfr Rosar Symsp Betsp Poptr Carbe
 [37] Fraan Frasp Ulmsp Corav Fagsy Queil Taxba Agrca Agrst Poane Poatr Rumcr
 [49] Dacgl Milef Poapr Cardi Rumsa Luzmu Rumac Rumco Antod Elyca Brasy Desfl
 [61] Holmo Junco Junef Meran Ajure Chema Potst Glehe Geuur Ranac Ranre Cirvu
 [73] Dauca Digpu Gerro Diaar Epipa Leuvu Medlu Rubpe Verch Steho Vinmi Frave
 [85] Trire Tarsp Polin Privu Viohi Viore Allpe Brost Galap Melpr Paprh Cheal
 [97] Polav Galmo Cordi Anaar Steme Lapco Poaan Lacse Sonol Anene Conmj Aruma
[109] Hyahi Hyano Eupam Linre Melun Polmu Tamco Vicse Vicsa Angsy Molca Brydi
[121] Cucba Melof Calse Cirar Scrno Pteaq Cirlu Stasy Arrel Urtdi Plama Artvu
[133] Holla Potre Hyppe Teusc
Variable used:
  [1] NULL      endozoo   durflow   pdias     longindex piq       vegsout  
  [8] pdias     endozoo   durflow   seasaes   begflow   pdias     NULL     
 [15] everalw   longindex begflow   durflow   height    autopoll  NULL     
 [22] vegsout   pdias     piq       longindex begflow   longindex seasaes  
 [29] pdias     vegsout   durflow   vegsout   wind      longindex pdias    
 [36] NULL      NULL      vegsout   endozoo   durflow   seasaes   vegaer   
 [43] lign      vegaer    semiros   longindex pdias     begflow   semiros  
 [50] longindex mycor     begflow   unsp      pdias     vegsout   epizoo   
 [57] pdias     autopoll  pdias     semiros   mycor     height    pdias    
 [64] wind      durflow   elaio     longindex pdias     vegaer    longindex
 [71] monocarp  height    autopoll  pdias     durflow   semiros   longindex
 [78] pdias     durflow   height    pdias     longindex ros       longindex
 [85] pdias     mycor     elaio     pdias     longindex everalw   longindex
 [92] height    seasaes   pdias     durflow   pdias     longindex ros      
 [99] everparti durflow   insects   durflow   windgl    mycor     suman    
[106] longindex ros       vegsout   longindex leafy     durflow   longindex
[113] autopoll  mycor     pdias     longindex begflow   longindex pdias    
[120] height    autopoll  vegsout   pdias     durflow   longindex epizoo   
[127] pdias     everparti pdias     height    epizoo    durflow   longindex
[134] vegsout   vegaer   
Separation step:
  [1]  0  6  8  7  5 10  9  8  7  6  4  7  8  0  6  5  7  6  7  3  0  7  6  8  7
 [26]  5  6  4  5  7  6  7  2  6  5  0  0  6  4  5  3  4  1  8  7  9  8  6  8  7
 [51]  5  7  6  7  8  4  7  6  8  7  5  7  6  3  9  8  7  6  8  7  5  7  9  8  6
 [76]  4  7  8  6  8  7  8  5  9  8  7  6  7  8  2  7  8  6  7  5  8  7  6  4  7
[101]  6  7  5  6  3  8  7  6  7  5  8  7  8  6  8  7  4  8  7  9  8  6  9 10  8
[126]  7  8  5  8  7  6  9  8  7  8

Available components:
[1] "data"      "hasNA"     "order"     "variable"  "step"      "order.lab"
[7] "call"     
> 
> suppressWarnings(RNGversion("3.5.0")) # back compatibility of results
> set.seed(1)
> ani.N1 <- animals; ani.N1[cbind(sample.int(20, 10), sample.int(6, 10, replace=TRUE))] <- NA
> (maniN <- mona(ani.N1, trace=TRUE))
Loop npass = 1: (ka,kb) = (1,20)
  for(j ..) -> jma=1, jtel(.,z) = (10, 10) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (1, 10, 10, 11)
 --> nclu = 2, kwan[ka] = 10
L500; found kwan[1] = 10 >= 2  ==> Loop again
Loop npass = 2: (ka,kb) = (1,10)
  for(j ..) -> jma=3, jtel(.,z) = (3, 7) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (1, 7, 3, 8)
 --> nclu = 3, kwan[ka] = 3
Loop npass = 2: (ka,kb) = (11,20)
  for(j ..) -> jma=2, jtel(.,z) = (1, 9) --> splitting: ka=11, ner[ka]=3 => (nzf, jtel2, jres, km) = (1, 9, 1, 20)
 --> nclu = 4, kwan[ka] = 1
L500; found kwan[1] = 7 >= 2  ==> Loop again
Loop npass = 3: (ka,kb) = (1,7)
  for(j ..) -> jma=5, jtel(.,z) = (1, 6) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (1, 6, 1, 7)
 --> nclu = 5, kwan[ka] = 1
Loop npass = 3: (ka,kb) = (8,10)
  for(j ..) -> jma=4, jtel(.,z) = (1, 2) --> splitting: ka=8, ner[ka]=11 => (nzf, jtel2, jres, km) = (0, 1, 2, 9)
 --> nclu = 6, kwan[ka] = 2
Loop npass = 3: (ka,kb) = (11,19)
  for(j ..) -> jma=6, jtel(.,z) = (7, 2) --> splitting: ka=11, ner[ka]=3 => (nzf, jtel2, jres, km) = (0, 7, 2, 18)
 --> nclu = 7, kwan[ka] = 2
L500; found kwan[1] = 6 >= 2  ==> Loop again
Loop npass = 4: (ka,kb) = (1,6)
  for(j ..) -> jma=2, jtel(.,z) = (1, 5) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (1, 5, 1, 6)
 --> nclu = 8, kwan[ka] = 1
Loop npass = 4: (ka,kb) = (9,10)
  for(j ..) -> jma=5, jtel(.,z) = (1, 1) --> splitting: ka=9, ner[ka]=12 => (nzf, jtel2, jres, km) = (0, 1, 1, 10)
 --> nclu = 9, kwan[ka] = 1
Loop npass = 4: (ka,kb) = (11,17)
  for(j ..) -> jma=4, jtel(.,z) = (4, 3) --> splitting: ka=11, ner[ka]=3 => (nzf, jtel2, jres, km) = (1, 3, 4, 14)
 --> nclu = 10, kwan[ka] = 4
Loop npass = 4: (ka,kb) = (18,19)
  for(j ..) -> jma=5, jtel(.,z) = (1, 1) --> splitting: ka=18, ner[ka]=8 => (nzf, jtel2, jres, km) = (1, 1, 1, 19)
 --> nclu = 11, kwan[ka] = 1
L500; found kwan[1] = 5 >= 2  ==> Loop again
Loop npass = 5: (ka,kb) = (1,5)
  for(j ..) -> jma=6, jtel(.,z) = (2, 3) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (1, 3, 2, 4)
 --> nclu = 12, kwan[ka] = 2
Loop npass = 5: (ka,kb) = (11,13)
  for(j ..) -> jma=5, jtel(.,z) = (2, 1) --> splitting: ka=11, ner[ka]=3 => (nzf, jtel2, jres, km) = (1, 1, 2, 12)
 --> nclu = 13, kwan[ka] = 2
Loop npass = 5: (ka,kb) = (14,17)
  for(j ..) -> jma=5, jtel(.,z) = (2, 1) --> _NO_ splitting
 --> nclu = 13, kwan[ka] = -4
L500; found kwan[1] = 3 >= 2  ==> Loop again
Loop npass = 6: (ka,kb) = (1,3)
  for(j ..) -> jma=5, jtel(.,z) = (2, 1) --> _NO_ splitting
 --> nclu = 13, kwan[ka] = -3
Loop npass = 6: (ka,kb) = (4,5)
  for(j ..) -> jma=5, jtel(.,z) = (2, 1) --> _NO_ splitting
 --> nclu = 13, kwan[ka] = -2
Loop npass = 6: (ka,kb) = (12,13)
  for(j ..) -> jma=5, jtel(.,z) = (2, 1) --> _NO_ splitting
 --> nclu = 13, kwan[ka] = -2
mona(x, ..) fit;  x of dimension 20x6
Because of NA's, revised data:
    war fly ver end gro hai
ant   0   0   0   0   0   0
bee   0   1   0   0   1   1
cat   1   0   1   0   0   1
cpl   0   0   0   0   0   1
chi   1   0   1   1   1   1
cow   1   0   1   0   1   1
duc   1   1   1   0   1   0
eag   1   0   1   1   0   0
ele   1   0   1   1   1   1
fly   0   1   0   0   0   0
fro   0   0   1   1   0   0
her   0   0   1   0   1   0
lio   1   0   1   1   1   1
liz   0   0   0   0   0   0
lob   0   0   0   0   0   0
man   1   0   1   1   1   1
rab   1   0   1   0   1   1
sal   0   0   1   0   0   0
spi   0   0   0   0   0   1
wha   1   0   1   1   1   0
Order of objects:
 [1] ant liz lob cpl spi fly bee fro her sal cat cow rab chi ele lio man eag wha
[20] duc
Variable used:
 [1] NULL NULL hai  NULL fly  gro  ver  end  gro  war  gro  NULL end  NULL NULL
[16] NULL hai  gro  fly 
Separation step:
 [1] 0 0 5 0 4 3 2 3 4 1 5 0 4 0 0 0 3 4 2

Available components:
[1] "data"      "hasNA"     "order"     "variable"  "step"      "order.lab"
[7] "call"     
> 
> for(seed in c(2:20)) {
+     set.seed(seed); cat("seed = ", seed,"\n")
+     ani.N2 <- animals
+     ani.N2[cbind(sample.int(20, 9),
+                  sample.int( 6, 9, replace=TRUE))] <- NA
+     try(print(maniN2 <- mona(ani.N2, trace=TRUE)))
+ }
seed =  2 
Loop npass = 1: (ka,kb) = (1,20)
  for(j ..) -> jma=1, jtel(.,z) = (10, 10) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (1, 10, 10, 11)
 --> nclu = 2, kwan[ka] = 10
L500; found kwan[1] = 10 >= 2  ==> Loop again
Loop npass = 2: (ka,kb) = (1,10)
  for(j ..) -> jma=3, jtel(.,z) = (4, 6) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (1, 6, 4, 7)
 --> nclu = 3, kwan[ka] = 4
Loop npass = 2: (ka,kb) = (11,20)
  for(j ..) -> jma=5, jtel(.,z) = (9, 1) --> splitting: ka=11, ner[ka]=3 => (nzf, jtel2, jres, km) = (0, 9, 1, 20)
 --> nclu = 4, kwan[ka] = 1
L500; found kwan[1] = 6 >= 2  ==> Loop again
Loop npass = 3: (ka,kb) = (1,6)
  for(j ..) -> jma=6, jtel(.,z) = (2, 4) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (1, 4, 2, 5)
 --> nclu = 5, kwan[ka] = 2
Loop npass = 3: (ka,kb) = (7,10)
  for(j ..) -> jma=4, jtel(.,z) = (1, 3) --> splitting: ka=7, ner[ka]=11 => (nzf, jtel2, jres, km) = (0, 1, 3, 8)
 --> nclu = 6, kwan[ka] = 3
Loop npass = 3: (ka,kb) = (11,19)
  for(j ..) -> jma=4, jtel(.,z) = (5, 4) --> splitting: ka=11, ner[ka]=3 => (nzf, jtel2, jres, km) = (1, 4, 5, 15)
 --> nclu = 7, kwan[ka] = 5
L500; found kwan[1] = 4 >= 2  ==> Loop again
Loop npass = 4: (ka,kb) = (1,4)
  for(j ..) -> jma=2, jtel(.,z) = (2, 2) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (1, 2, 2, 3)
 --> nclu = 8, kwan[ka] = 2
Loop npass = 4: (ka,kb) = (5,6)
  for(j ..) -> jma=2, jtel(.,z) = (2, 2) --> _NO_ splitting
 --> nclu = 8, kwan[ka] = -2
Loop npass = 4: (ka,kb) = (8,10)
  for(j ..) -> jma=5, jtel(.,z) = (1, 2) --> splitting: ka=8, ner[ka]=12 => (nzf, jtel2, jres, km) = (0, 1, 2, 9)
 --> nclu = 9, kwan[ka] = 2
Loop npass = 4: (ka,kb) = (11,14)
  for(j ..) -> jma=2, jtel(.,z) = (2, 2) --> splitting: ka=11, ner[ka]=3 => (nzf, jtel2, jres, km) = (1, 2, 2, 13)
 --> nclu = 10, kwan[ka] = 2
Loop npass = 4: (ka,kb) = (15,19)
  for(j ..) -> jma=2, jtel(.,z) = (1, 4) --> splitting: ka=15, ner[ka]=5 => (nzf, jtel2, jres, km) = (1, 4, 1, 19)
 --> nclu = 11, kwan[ka] = 1
L500; found kwan[1] = 2 >= 2  ==> Loop again
Loop npass = 5: (ka,kb) = (1,2)
  for(j ..) -> jma=5, jtel(.,z) = (1, 1) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (0, 1, 1, 2)
 --> nclu = 12, kwan[ka] = 1
Loop npass = 5: (ka,kb) = (3,4)
  for(j ..) -> jma=5, jtel(.,z) = (1, 1) --> splitting: ka=3, ner[ka]=2 => (nzf, jtel2, jres, km) = (0, 1, 1, 4)
 --> nclu = 13, kwan[ka] = 1
Loop npass = 5: (ka,kb) = (9,10)
  for(j ..) -> jma=5, jtel(.,z) = (1, 1) --> _NO_ splitting
 --> nclu = 13, kwan[ka] = -2
Loop npass = 5: (ka,kb) = (11,12)
  for(j ..) -> jma=5, jtel(.,z) = (1, 1) --> _NO_ splitting
 --> nclu = 13, kwan[ka] = -2
Loop npass = 5: (ka,kb) = (13,14)
  for(j ..) -> jma=6, jtel(.,z) = (1, 1) --> splitting: ka=13, ner[ka]=6 => (nzf, jtel2, jres, km) = (0, 1, 1, 14)
 --> nclu = 14, kwan[ka] = 1
Loop npass = 5: (ka,kb) = (15,18)
  for(j ..) -> jma=6, jtel(.,z) = (2, 2) --> splitting: ka=15, ner[ka]=5 => (nzf, jtel2, jres, km) = (0, 2, 2, 17)
 --> nclu = 15, kwan[ka] = 2
L500; found kwan[15] = 2 >= 2  ==> Loop again
Loop npass = 6: (ka,kb) = (15,16)
  for(j ..) -> jma=6, jtel(.,z) = (2, 2) --> _NO_ splitting
 --> nclu = 15, kwan[ka] = -2
Loop npass = 6: (ka,kb) = (17,18)
  for(j ..) -> jma=6, jtel(.,z) = (2, 2) --> _NO_ splitting
 --> nclu = 15, kwan[ka] = -2
mona(x, ..) fit;  x of dimension 20x6
Because of NA's, revised data:
    war fly ver end gro hai
ant   0   0   0   0   1   0
bee   0   1   0   0   1   0
cat   1   0   1   0   1   1
cpl   0   0   0   0   0   1
chi   1   0   1   1   1   1
cow   1   1   1   0   1   1
duc   1   1   1   0   1   0
eag   1   1   1   1   0   0
ele   1   0   1   1   1   0
fly   0   1   0   0   0   0
fro   0   0   1   1   0   0
her   0   0   1   0   1   0
lio   1   0   1   1   1   1
liz   0   0   1   0   0   0
lob   0   0   0   0   0   0
man   1   1   1   1   1   1
rab   1   0   1   0   1   1
sal   0   0   1   0   0   0
spi   0   0   0   0   0   1
wha   1   0   1   1   1   0
Order of objects:
 [1] ant lob bee fly cpl spi fro her liz sal cat rab cow duc chi lio ele wha man
[20] eag
Variable used:
 [1] gro  fly  gro  hai  NULL ver  end  gro  NULL war  NULL fly  hai  end  NULL
[16] hai  NULL fly  gro 
Separation step:
 [1] 5 4 5 3 0 2 3 4 0 1 0 4 5 3 0 5 0 4 2

Available components:
[1] "data"      "hasNA"     "order"     "variable"  "step"      "order.lab"
[7] "call"     
seed =  3 
Loop npass = 1: (ka,kb) = (1,20)
  for(j ..) -> jma=1, jtel(.,z) = (10, 10) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (1, 10, 10, 11)
 --> nclu = 2, kwan[ka] = 10
L500; found kwan[1] = 10 >= 2  ==> Loop again
Loop npass = 2: (ka,kb) = (1,10)
  for(j ..) -> jma=3, jtel(.,z) = (4, 6) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (1, 6, 4, 7)
 --> nclu = 3, kwan[ka] = 4
Loop npass = 2: (ka,kb) = (11,20)
  for(j ..) -> jma=2, jtel(.,z) = (2, 8) --> splitting: ka=11, ner[ka]=3 => (nzf, jtel2, jres, km) = (1, 8, 2, 19)
 --> nclu = 4, kwan[ka] = 2
L500; found kwan[1] = 6 >= 2  ==> Loop again
Loop npass = 3: (ka,kb) = (1,6)
  for(j ..) -> jma=5, jtel(.,z) = (3, 3) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (0, 3, 3, 4)
 --> nclu = 5, kwan[ka] = 3
Loop npass = 3: (ka,kb) = (7,10)
  for(j ..) -> jma=4, jtel(.,z) = (1, 3) --> splitting: ka=7, ner[ka]=11 => (nzf, jtel2, jres, km) = (0, 1, 3, 8)
 --> nclu = 6, kwan[ka] = 3
Loop npass = 3: (ka,kb) = (11,18)
  for(j ..) -> jma=4, jtel(.,z) = (6, 2) --> splitting: ka=11, ner[ka]=3 => (nzf, jtel2, jres, km) = (1, 2, 6, 13)
 --> nclu = 7, kwan[ka] = 6
Loop npass = 3: (ka,kb) = (19,20)
  for(j ..) -> jma=5, jtel(.,z) = (1, 1) --> splitting: ka=19, ner[ka]=7 => (nzf, jtel2, jres, km) = (0, 1, 1, 20)
 --> nclu = 8, kwan[ka] = 1
L500; found kwan[1] = 3 >= 2  ==> Loop again
Loop npass = 4: (ka,kb) = (1,3)
  for(j ..) -> jma=2, jtel(.,z) = (1, 2) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (1, 2, 1, 3)
 --> nclu = 9, kwan[ka] = 1
Loop npass = 4: (ka,kb) = (4,6)
  for(j ..) -> jma=2, jtel(.,z) = (1, 2) --> splitting: ka=4, ner[ka]=4 => (nzf, jtel2, jres, km) = (1, 2, 1, 6)
 --> nclu = 10, kwan[ka] = 1
Loop npass = 4: (ka,kb) = (8,10)
  for(j ..) -> jma=5, jtel(.,z) = (1, 2) --> splitting: ka=8, ner[ka]=12 => (nzf, jtel2, jres, km) = (0, 1, 2, 9)
 --> nclu = 11, kwan[ka] = 2
Loop npass = 4: (ka,kb) = (11,12)
  for(j ..) -> jma=5, jtel(.,z) = (1, 1) --> splitting: ka=11, ner[ka]=3 => (nzf, jtel2, jres, km) = (1, 1, 1, 12)
 --> nclu = 12, kwan[ka] = 1
Loop npass = 4: (ka,kb) = (13,18)
  for(j ..) -> jma=6, jtel(.,z) = (4, 2) --> splitting: ka=13, ner[ka]=5 => (nzf, jtel2, jres, km) = (0, 4, 2, 17)
 --> nclu = 13, kwan[ka] = 2
L500; found kwan[1] = 2 >= 2  ==> Loop again
Loop npass = 5: (ka,kb) = (1,2)
  for(j ..) -> jma=6, jtel(.,z) = (4, 2) --> _NO_ splitting
 --> nclu = 13, kwan[ka] = -2
Loop npass = 5: (ka,kb) = (4,5)
  for(j ..) -> jma=6, jtel(.,z) = (4, 2) --> _NO_ splitting
 --> nclu = 13, kwan[ka] = -2
Loop npass = 5: (ka,kb) = (9,10)
  for(j ..) -> jma=6, jtel(.,z) = (4, 2) --> _NO_ splitting
 --> nclu = 13, kwan[ka] = -2
Loop npass = 5: (ka,kb) = (13,16)
  for(j ..) -> jma=6, jtel(.,z) = (4, 2) --> _NO_ splitting
 --> nclu = 13, kwan[ka] = -4
Loop npass = 5: (ka,kb) = (17,18)
  for(j ..) -> jma=6, jtel(.,z) = (4, 2) --> _NO_ splitting
 --> nclu = 13, kwan[ka] = -2
mona(x, ..) fit;  x of dimension 20x6
Because of NA's, revised data:
    war fly ver end gro hai
ant   0   0   0   0   1   0
bee   0   1   0   0   1   1
cat   1   0   1   0   0   1
cpl   0   0   0   0   0   1
chi   1   0   1   1   1   1
cow   1   0   1   1   1   1
duc   1   1   1   1   1   0
eag   1   1   1   1   0   0
ele   1   0   1   1   1   0
fly   0   1   0   0   0   0
fro   0   0   1   1   0   0
her   0   0   1   0   1   0
lio   1   0   1   1   1   1
liz   0   0   1   0   0   0
lob   0   0   0   0   1   0
man   1   0   1   1   1   1
rab   1   0   1   0   1   1
sal   0   0   1   0   0   0
spi   0   0   0   0   0   1
wha   1   0   1   1   1   0
Order of objects:
 [1] ant lob bee cpl spi fly fro her liz sal cat rab chi cow lio man ele wha duc
[20] eag
Variable used:
 [1] NULL fly  gro  NULL fly  ver  end  gro  NULL war  gro  end  NULL NULL NULL
[16] hai  NULL fly  gro 
Separation step:
 [1] 0 4 3 0 4 2 3 4 0 1 4 3 0 0 0 4 0 2 3

Available components:
[1] "data"      "hasNA"     "order"     "variable"  "step"      "order.lab"
[7] "call"     
seed =  4 
Error in mona(ani.N2, trace = TRUE) : 
  No clustering performed, all variables have at least one missing value.
seed =  5 
Error in mona(ani.N2, trace = TRUE) : 
  No clustering performed, all variables have at least one missing value.
seed =  6 
Loop npass = 1: (ka,kb) = (1,20)
  for(j ..) -> jma=3, jtel(.,z) = (14, 6) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (1, 6, 14, 7)
 --> nclu = 2, kwan[ka] = 14
L500; found kwan[1] = 6 >= 2  ==> Loop again
Loop npass = 2: (ka,kb) = (1,6)
  for(j ..) -> jma=2, jtel(.,z) = (2, 4) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (1, 4, 2, 5)
 --> nclu = 3, kwan[ka] = 2
Loop npass = 2: (ka,kb) = (7,20)
  for(j ..) -> jma=6, jtel(.,z) = (5, 9) --> splitting: ka=7, ner[ka]=3 => (nzf, jtel2, jres, km) = (0, 5, 9, 12)
 --> nclu = 4, kwan[ka] = 9
L500; found kwan[1] = 4 >= 2  ==> Loop again
Loop npass = 3: (ka,kb) = (1,4)
  for(j ..) -> jma=5, jtel(.,z) = (1, 3) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (0, 1, 3, 2)
 --> nclu = 5, kwan[ka] = 3
Loop npass = 3: (ka,kb) = (5,6)
  for(j ..) -> jma=5, jtel(.,z) = (1, 1) --> splitting: ka=5, ner[ka]=2 => (nzf, jtel2, jres, km) = (0, 1, 1, 6)
 --> nclu = 6, kwan[ka] = 1
Loop npass = 3: (ka,kb) = (7,11)
  for(j ..) -> jma=4, jtel(.,z) = (2, 3) --> splitting: ka=7, ner[ka]=3 => (nzf, jtel2, jres, km) = (1, 3, 2, 10)
 --> nclu = 7, kwan[ka] = 2
Loop npass = 3: (ka,kb) = (12,20)
  for(j ..) -> jma=2, jtel(.,z) = (2, 7) --> splitting: ka=12, ner[ka]=5 => (nzf, jtel2, jres, km) = (1, 7, 2, 19)
 --> nclu = 8, kwan[ka] = 2
L500; found kwan[2] = 3 >= 2  ==> Loop again
Loop npass = 4: (ka,kb) = (2,4)
  for(j ..) -> jma=6, jtel(.,z) = (2, 1) --> splitting: ka=2, ner[ka]=4 => (nzf, jtel2, jres, km) = (0, 2, 1, 4)
 --> nclu = 9, kwan[ka] = 1
Loop npass = 4: (ka,kb) = (7,9)
  for(j ..) -> jma=5, jtel(.,z) = (2, 1) --> splitting: ka=7, ner[ka]=3 => (nzf, jtel2, jres, km) = (1, 1, 2, 8)
 --> nclu = 10, kwan[ka] = 2
Loop npass = 4: (ka,kb) = (10,11)
  for(j ..) -> jma=5, jtel(.,z) = (2, 1) --> _NO_ splitting
 --> nclu = 10, kwan[ka] = -2
Loop npass = 4: (ka,kb) = (12,18)
  for(j ..) -> jma=4, jtel(.,z) = (5, 2) --> splitting: ka=12, ner[ka]=5 => (nzf, jtel2, jres, km) = (0, 5, 2, 17)
 --> nclu = 11, kwan[ka] = 2
Loop npass = 4: (ka,kb) = (19,20)
  for(j ..) -> jma=4, jtel(.,z) = (1, 1) --> splitting: ka=19, ner[ka]=7 => (nzf, jtel2, jres, km) = (1, 1, 1, 20)
 --> nclu = 12, kwan[ka] = 1
L500; found kwan[2] = 2 >= 2  ==> Loop again
Loop npass = 5: (ka,kb) = (2,3)
  for(j ..) -> jma=4, jtel(.,z) = (1, 1) --> _NO_ splitting
 --> nclu = 12, kwan[ka] = -2
Loop npass = 5: (ka,kb) = (8,9)
  for(j ..) -> jma=4, jtel(.,z) = (1, 1) --> _NO_ splitting
 --> nclu = 12, kwan[ka] = -2
Loop npass = 5: (ka,kb) = (12,16)
  for(j ..) -> jma=1, jtel(.,z) = (3, 2) --> splitting: ka=12, ner[ka]=5 => (nzf, jtel2, jres, km) = (0, 3, 2, 15)
 --> nclu = 13, kwan[ka] = 2
Loop npass = 5: (ka,kb) = (17,18)
  for(j ..) -> jma=5, jtel(.,z) = (1, 1) --> splitting: ka=17, ner[ka]=12 => (nzf, jtel2, jres, km) = (0, 1, 1, 18)
 --> nclu = 14, kwan[ka] = 1
L500; found kwan[12] = 3 >= 2  ==> Loop again
Loop npass = 6: (ka,kb) = (12,14)
  for(j ..) -> jma=5, jtel(.,z) = (1, 1) --> _NO_ splitting
 --> nclu = 14, kwan[ka] = -3
Loop npass = 6: (ka,kb) = (15,16)
  for(j ..) -> jma=5, jtel(.,z) = (1, 1) --> _NO_ splitting
 --> nclu = 14, kwan[ka] = -2
mona(x, ..) fit;  x of dimension 20x6
Because of NA's, revised data:
    war fly ver end gro hai
ant   0   0   0   0   1   0
bee   0   1   0   0   1   1
cat   1   0   1   0   0   1
cpl   0   0   0   0   0   1
chi   1   0   1   1   1   0
cow   1   0   1   0   1   1
duc   1   1   1   0   1   0
eag   1   1   1   1   0   0
ele   1   0   1   1   1   0
fly   0   1   0   0   0   0
fro   0   0   1   1   1   0
her   0   0   1   0   1   0
lio   1   0   1   1   1   1
liz   0   0   1   0   0   0
lob   0   0   0   0   0   0
man   1   0   1   1   1   1
rab   1   0   1   0   1   1
sal   0   0   1   1   1   0
spi   0   0   0   0   0   1
wha   1   0   1   1   1   0
Order of objects:
 [1] ant cpl spi lob bee fly cat cow rab lio man chi ele wha fro sal her liz duc
[20] eag
Variable used:
 [1] gro  NULL hai  fly  gro  ver  gro  NULL end  NULL hai  NULL NULL war  NULL
[16] end  gro  fly  end 
Separation step:
 [1] 3 0 4 2 3 1 4 0 3 0 2 0 0 5 0 4 5 3 4

Available components:
[1] "data"      "hasNA"     "order"     "variable"  "step"      "order.lab"
[7] "call"     
seed =  7 
Loop npass = 1: (ka,kb) = (1,20)
  for(j ..) -> jma=1, jtel(.,z) = (11, 9) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (1, 9, 11, 10)
 --> nclu = 2, kwan[ka] = 11
L500; found kwan[1] = 9 >= 2  ==> Loop again
Loop npass = 2: (ka,kb) = (1,9)
  for(j ..) -> jma=3, jtel(.,z) = (3, 6) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (1, 6, 3, 7)
 --> nclu = 3, kwan[ka] = 3
Loop npass = 2: (ka,kb) = (10,20)
  for(j ..) -> jma=6, jtel(.,z) = (7, 4) --> splitting: ka=10, ner[ka]=3 => (nzf, jtel2, jres, km) = (0, 7, 4, 17)
 --> nclu = 4, kwan[ka] = 4
L500; found kwan[1] = 6 >= 2  ==> Loop again
Loop npass = 3: (ka,kb) = (1,6)
  for(j ..) -> jma=2, jtel(.,z) = (2, 4) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (1, 4, 2, 5)
 --> nclu = 5, kwan[ka] = 2
Loop npass = 3: (ka,kb) = (7,9)
  for(j ..) -> jma=4, jtel(.,z) = (1, 2) --> splitting: ka=7, ner[ka]=11 => (nzf, jtel2, jres, km) = (0, 1, 2, 8)
 --> nclu = 6, kwan[ka] = 2
Loop npass = 3: (ka,kb) = (10,16)
  for(j ..) -> jma=5, jtel(.,z) = (5, 2) --> splitting: ka=10, ner[ka]=3 => (nzf, jtel2, jres, km) = (1, 2, 5, 12)
 --> nclu = 7, kwan[ka] = 5
Loop npass = 3: (ka,kb) = (17,20)
  for(j ..) -> jma=2, jtel(.,z) = (2, 2) --> splitting: ka=17, ner[ka]=7 => (nzf, jtel2, jres, km) = (0, 2, 2, 19)
 --> nclu = 8, kwan[ka] = 2
L500; found kwan[1] = 4 >= 2  ==> Loop again
Loop npass = 4: (ka,kb) = (1,4)
  for(j ..) -> jma=5, jtel(.,z) = (2, 2) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (0, 2, 2, 3)
 --> nclu = 9, kwan[ka] = 2
Loop npass = 4: (ka,kb) = (5,6)
  for(j ..) -> jma=5, jtel(.,z) = (1, 1) --> splitting: ka=5, ner[ka]=2 => (nzf, jtel2, jres, km) = (0, 1, 1, 6)
 --> nclu = 10, kwan[ka] = 1
Loop npass = 4: (ka,kb) = (8,9)
  for(j ..) -> jma=5, jtel(.,z) = (1, 1) --> _NO_ splitting
 --> nclu = 10, kwan[ka] = -2
Loop npass = 4: (ka,kb) = (10,11)
  for(j ..) -> jma=3, jtel(.,z) = (1, 1) --> splitting: ka=10, ner[ka]=3 => (nzf, jtel2, jres, km) = (0, 1, 1, 11)
 --> nclu = 11, kwan[ka] = 1
Loop npass = 4: (ka,kb) = (12,16)
  for(j ..) -> jma=4, jtel(.,z) = (2, 3) --> splitting: ka=12, ner[ka]=5 => (nzf, jtel2, jres, km) = (0, 2, 3, 14)
 --> nclu = 12, kwan[ka] = 3
Loop npass = 4: (ka,kb) = (17,18)
  for(j ..) -> jma=4, jtel(.,z) = (1, 1) --> splitting: ka=17, ner[ka]=7 => (nzf, jtel2, jres, km) = (1, 1, 1, 18)
 --> nclu = 13, kwan[ka] = 1
Loop npass = 4: (ka,kb) = (19,20)
  for(j ..) -> jma=3, jtel(.,z) = (1, 1) --> splitting: ka=19, ner[ka]=9 => (nzf, jtel2, jres, km) = (0, 1, 1, 20)
 --> nclu = 14, kwan[ka] = 1
L500; found kwan[1] = 2 >= 2  ==> Loop again
Loop npass = 5: (ka,kb) = (1,2)
  for(j ..) -> jma=3, jtel(.,z) = (1, 1) --> _NO_ splitting
 --> nclu = 14, kwan[ka] = -2
Loop npass = 5: (ka,kb) = (3,4)
  for(j ..) -> jma=6, jtel(.,z) = (1, 1) --> splitting: ka=3, ner[ka]=15 => (nzf, jtel2, jres, km) = (1, 1, 1, 4)
 --> nclu = 15, kwan[ka] = 1
Loop npass = 5: (ka,kb) = (12,13)
  for(j ..) -> jma=6, jtel(.,z) = (1, 1) --> _NO_ splitting
 --> nclu = 15, kwan[ka] = -2
Loop npass = 5: (ka,kb) = (14,16)
  for(j ..) -> jma=6, jtel(.,z) = (1, 1) --> _NO_ splitting
 --> nclu = 15, kwan[ka] = -3
mona(x, ..) fit;  x of dimension 20x6
Because of NA's, revised data:
    war fly ver end gro hai
ant   0   0   0   0   1   0
bee   0   1   0   0   1   1
cat   1   0   1   0   0   1
cpl   1   0   0   0   0   1
chi   1   0   1   1   1   1
cow   1   0   1   0   1   1
duc   1   1   1   0   1   0
eag   1   1   1   1   0   0
ele   1   0   1   1   1   0
fly   0   1   0   0   0   0
fro   0   0   1   1   0   0
her   0   0   0   0   1   0
lio   1   0   1   0   1   1
liz   0   0   1   0   0   0
lob   0   0   0   0   0   0
man   1   0   1   1   1   1
rab   1   0   1   0   1   1
sal   0   0   1   0   0   0
spi   0   0   0   0   0   1
wha   1   0   0   1   1   0
Order of objects:
 [1] ant her lob spi bee fly fro liz sal cat cpl chi man cow lio rab duc eag ele
[20] wha
Variable used:
 [1] NULL gro  hai  fly  gro  ver  end  NULL war  ver  gro  NULL end  NULL NULL
[16] hai  end  fly  ver 
Separation step:
 [1] 0 4 5 3 4 2 3 0 1 4 3 0 4 0 0 2 4 3 4

Available components:
[1] "data"      "hasNA"     "order"     "variable"  "step"      "order.lab"
[7] "call"     
seed =  8 
Error in mona(ani.N2, trace = TRUE) : 
  No clustering performed, all variables have at least one missing value.
seed =  9 
Error in mona(ani.N2, trace = TRUE) : 
  No clustering performed, all variables have at least one missing value.
seed =  10 
Loop npass = 1: (ka,kb) = (1,20)
  for(j ..) -> jma=1, jtel(.,z) = (10, 10) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (1, 10, 10, 11)
 --> nclu = 2, kwan[ka] = 10
L500; found kwan[1] = 10 >= 2  ==> Loop again
Loop npass = 2: (ka,kb) = (1,10)
  for(j ..) -> jma=4, jtel(.,z) = (1, 9) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (1, 9, 1, 10)
 --> nclu = 3, kwan[ka] = 1
Loop npass = 2: (ka,kb) = (11,20)
  for(j ..) -> jma=6, jtel(.,z) = (6, 4) --> splitting: ka=11, ner[ka]=3 => (nzf, jtel2, jres, km) = (0, 6, 4, 17)
 --> nclu = 4, kwan[ka] = 4
L500; found kwan[1] = 9 >= 2  ==> Loop again
Loop npass = 3: (ka,kb) = (1,9)
  for(j ..) -> jma=3, jtel(.,z) = (4, 5) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (1, 5, 4, 6)
 --> nclu = 5, kwan[ka] = 4
Loop npass = 3: (ka,kb) = (11,16)
  for(j ..) -> jma=4, jtel(.,z) = (2, 4) --> splitting: ka=11, ner[ka]=3 => (nzf, jtel2, jres, km) = (1, 4, 2, 15)
 --> nclu = 6, kwan[ka] = 2
Loop npass = 3: (ka,kb) = (17,20)
  for(j ..) -> jma=2, jtel(.,z) = (2, 2) --> splitting: ka=17, ner[ka]=7 => (nzf, jtel2, jres, km) = (0, 2, 2, 19)
 --> nclu = 7, kwan[ka] = 2
L500; found kwan[1] = 5 >= 2  ==> Loop again
Loop npass = 4: (ka,kb) = (1,5)
  for(j ..) -> jma=2, jtel(.,z) = (2, 3) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (1, 3, 2, 4)
 --> nclu = 8, kwan[ka] = 2
Loop npass = 4: (ka,kb) = (6,9)
  for(j ..) -> jma=2, jtel(.,z) = (1, 3) --> splitting: ka=6, ner[ka]=4 => (nzf, jtel2, jres, km) = (1, 3, 1, 9)
 --> nclu = 9, kwan[ka] = 1
Loop npass = 4: (ka,kb) = (11,14)
  for(j ..) -> jma=5, jtel(.,z) = (3, 1) --> splitting: ka=11, ner[ka]=3 => (nzf, jtel2, jres, km) = (1, 1, 3, 12)
 --> nclu = 10, kwan[ka] = 3
Loop npass = 4: (ka,kb) = (15,16)
  for(j ..) -> jma=5, jtel(.,z) = (3, 1) --> _NO_ splitting
 --> nclu = 10, kwan[ka] = -2
Loop npass = 4: (ka,kb) = (17,18)
  for(j ..) -> jma=4, jtel(.,z) = (1, 1) --> splitting: ka=17, ner[ka]=7 => (nzf, jtel2, jres, km) = (1, 1, 1, 18)
 --> nclu = 11, kwan[ka] = 1
Loop npass = 4: (ka,kb) = (19,20)
  for(j ..) -> jma=4, jtel(.,z) = (1, 1) --> _NO_ splitting
 --> nclu = 11, kwan[ka] = -2
L500; found kwan[1] = 3 >= 2  ==> Loop again
Loop npass = 5: (ka,kb) = (1,3)
  for(j ..) -> jma=5, jtel(.,z) = (1, 2) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (0, 1, 2, 2)
 --> nclu = 12, kwan[ka] = 2
Loop npass = 5: (ka,kb) = (4,5)
  for(j ..) -> jma=5, jtel(.,z) = (1, 1) --> splitting: ka=4, ner[ka]=2 => (nzf, jtel2, jres, km) = (0, 1, 1, 5)
 --> nclu = 13, kwan[ka] = 1
Loop npass = 5: (ka,kb) = (6,8)
  for(j ..) -> jma=5, jtel(.,z) = (1, 2) --> splitting: ka=6, ner[ka]=4 => (nzf, jtel2, jres, km) = (1, 2, 1, 8)
 --> nclu = 14, kwan[ka] = 1
Loop npass = 5: (ka,kb) = (12,14)
  for(j ..) -> jma=5, jtel(.,z) = (1, 2) --> _NO_ splitting
 --> nclu = 14, kwan[ka] = -3
L500; found kwan[2] = 2 >= 2  ==> Loop again
Loop npass = 6: (ka,kb) = (2,3)
  for(j ..) -> jma=6, jtel(.,z) = (1, 1) --> splitting: ka=2, ner[ka]=15 => (nzf, jtel2, jres, km) = (1, 1, 1, 3)
 --> nclu = 15, kwan[ka] = 1
Loop npass = 6: (ka,kb) = (6,7)
  for(j ..) -> jma=6, jtel(.,z) = (1, 1) --> splitting: ka=6, ner[ka]=4 => (nzf, jtel2, jres, km) = (0, 1, 1, 7)
 --> nclu = 16, kwan[ka] = 1
mona(x, ..) fit;  x of dimension 20x6
Because of NA's, revised data:
    war fly ver end gro hai
ant   0   0   0   0   1   0
bee   0   1   0   0   1   1
cat   1   0   1   0   0   1
cpl   0   0   1   0   0   1
chi   1   0   1   1   1   1
cow   1   0   1   0   1   1
duc   1   1   1   0   1   0
eag   1   1   1   1   0   0
ele   1   0   1   1   1   0
fly   0   1   0   0   0   0
fro   0   0   0   1   0   0
her   0   0   1   0   1   0
lio   1   0   1   0   1   1
liz   0   0   1   0   0   0
lob   0   0   0   0   0   0
man   1   0   1   1   1   1
rab   1   0   1   0   1   1
sal   0   1   1   0   0   0
spi   0   0   0   0   0   1
wha   1   0   1   1   1   0
Order of objects:
 [1] ant lob spi bee fly cpl liz her sal fro cat cow lio rab chi man duc eag ele
[20] wha
Variable used:
 [1] gro  hai  fly  gro  ver  hai  gro  fly  end  war  gro  NULL NULL end  NULL
[16] hai  end  fly  NULL
Separation step:
 [1] 5 6 4 5 3 6 5 4 2 1 4 0 0 3 0 2 4 3 0

Available components:
[1] "data"      "hasNA"     "order"     "variable"  "step"      "order.lab"
[7] "call"     
seed =  11 
Error in mona(ani.N2, trace = TRUE) : 
  No clustering performed, all variables have at least one missing value.
seed =  12 
Loop npass = 1: (ka,kb) = (1,20)
  for(j ..) -> jma=6, jtel(.,z) = (9, 11) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (1, 11, 9, 12)
 --> nclu = 2, kwan[ka] = 9
L500; found kwan[1] = 11 >= 2  ==> Loop again
Loop npass = 2: (ka,kb) = (1,11)
  for(j ..) -> jma=1, jtel(.,z) = (4, 7) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (1, 7, 4, 8)
 --> nclu = 3, kwan[ka] = 4
Loop npass = 2: (ka,kb) = (12,20)
  for(j ..) -> jma=5, jtel(.,z) = (6, 3) --> splitting: ka=12, ner[ka]=2 => (nzf, jtel2, jres, km) = (0, 6, 3, 18)
 --> nclu = 4, kwan[ka] = 3
L500; found kwan[1] = 7 >= 2  ==> Loop again
Loop npass = 3: (ka,kb) = (1,7)
  for(j ..) -> jma=2, jtel(.,z) = (2, 5) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (0, 2, 5, 3)
 --> nclu = 5, kwan[ka] = 5
Loop npass = 3: (ka,kb) = (8,11)
  for(j ..) -> jma=2, jtel(.,z) = (2, 2) --> splitting: ka=8, ner[ka]=7 => (nzf, jtel2, jres, km) = (0, 2, 2, 10)
 --> nclu = 6, kwan[ka] = 2
Loop npass = 3: (ka,kb) = (12,17)
  for(j ..) -> jma=3, jtel(.,z) = (3, 3) --> splitting: ka=12, ner[ka]=2 => (nzf, jtel2, jres, km) = (1, 3, 3, 15)
 --> nclu = 7, kwan[ka] = 3
Loop npass = 3: (ka,kb) = (18,20)
  for(j ..) -> jma=1, jtel(.,z) = (1, 2) --> splitting: ka=18, ner[ka]=3 => (nzf, jtel2, jres, km) = (0, 1, 2, 19)
 --> nclu = 8, kwan[ka] = 2
L500; found kwan[1] = 2 >= 2  ==> Loop again
Loop npass = 4: (ka,kb) = (1,2)
  for(j ..) -> jma=5, jtel(.,z) = (1, 1) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (0, 1, 1, 2)
 --> nclu = 9, kwan[ka] = 1
Loop npass = 4: (ka,kb) = (3,7)
  for(j ..) -> jma=4, jtel(.,z) = (2, 3) --> splitting: ka=3, ner[ka]=11 => (nzf, jtel2, jres, km) = (0, 2, 3, 5)
 --> nclu = 10, kwan[ka] = 3
Loop npass = 4: (ka,kb) = (8,9)
  for(j ..) -> jma=4, jtel(.,z) = (1, 1) --> splitting: ka=8, ner[ka]=7 => (nzf, jtel2, jres, km) = (1, 1, 1, 9)
 --> nclu = 11, kwan[ka] = 1
Loop npass = 4: (ka,kb) = (10,11)
  for(j ..) -> jma=4, jtel(.,z) = (1, 1) --> _NO_ splitting
 --> nclu = 11, kwan[ka] = -2
Loop npass = 4: (ka,kb) = (12,14)
  for(j ..) -> jma=2, jtel(.,z) = (1, 2) --> splitting: ka=12, ner[ka]=2 => (nzf, jtel2, jres, km) = (0, 1, 2, 13)
 --> nclu = 12, kwan[ka] = 2
Loop npass = 4: (ka,kb) = (15,17)
  for(j ..) -> jma=2, jtel(.,z) = (1, 2) --> _NO_ splitting
 --> nclu = 12, kwan[ka] = -3
Loop npass = 4: (ka,kb) = (19,20)
  for(j ..) -> jma=2, jtel(.,z) = (1, 2) --> _NO_ splitting
 --> nclu = 12, kwan[ka] = -2
L500; found kwan[3] = 2 >= 2  ==> Loop again
Loop npass = 5: (ka,kb) = (3,4)
  for(j ..) -> jma=3, jtel(.,z) = (1, 1) --> splitting: ka=3, ner[ka]=11 => (nzf, jtel2, jres, km) = (0, 1, 1, 4)
 --> nclu = 13, kwan[ka] = 1
Loop npass = 5: (ka,kb) = (5,7)
  for(j ..) -> jma=5, jtel(.,z) = (1, 2) --> splitting: ka=5, ner[ka]=12 => (nzf, jtel2, jres, km) = (0, 1, 2, 6)
 --> nclu = 14, kwan[ka] = 2
Loop npass = 5: (ka,kb) = (13,14)
  for(j ..) -> jma=5, jtel(.,z) = (1, 2) --> _NO_ splitting
 --> nclu = 14, kwan[ka] = -2
L500; found kwan[6] = 2 >= 2  ==> Loop again
Loop npass = 6: (ka,kb) = (6,7)
  for(j ..) -> jma=5, jtel(.,z) = (1, 2) --> _NO_ splitting
 --> nclu = 14, kwan[ka] = -2
mona(x, ..) fit;  x of dimension 20x6
Because of NA's, revised data:
    war fly ver end gro hai
ant   0   1   0   0   1   0
bee   1   1   0   0   1   1
cat   1   0   0   0   0   1
cpl   0   0   0   0   0   1
chi   1   0   0   1   1   1
cow   1   0   1   0   1   1
duc   1   1   1   0   1   0
eag   1   1   1   1   0   0
ele   1   0   1   1   1   0
fly   0   1   0   0   0   0
fro   0   0   1   1   0   0
her   0   0   1   0   1   0
lio   1   0   1   0   1   1
liz   0   0   1   0   0   0
lob   0   0   0   1   0   0
man   1   0   0   1   1   1
rab   1   0   1   0   1   1
sal   0   0   1   0   0   0
spi   0   0   0   0   0   1
wha   1   0   1   1   1   0
Order of objects:
 [1] ant fly fro lob her liz sal duc eag ele wha bee chi man cow lio rab cat cpl
[20] spi
Variable used:
 [1] gro  fly  ver  end  gro  NULL war  end  fly  NULL hai  fly  NULL ver  NULL
[16] NULL gro  war  NULL
Separation step:
 [1] 4 3 5 4 5 0 2 4 3 0 1 4 0 3 0 0 2 3 0

Available components:
[1] "data"      "hasNA"     "order"     "variable"  "step"      "order.lab"
[7] "call"     
seed =  13 
Loop npass = 1: (ka,kb) = (1,20)
  for(j ..) -> jma=1, jtel(.,z) = (10, 10) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (1, 10, 10, 11)
 --> nclu = 2, kwan[ka] = 10
L500; found kwan[1] = 10 >= 2  ==> Loop again
Loop npass = 2: (ka,kb) = (1,10)
  for(j ..) -> jma=6, jtel(.,z) = (2, 8) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (1, 8, 2, 9)
 --> nclu = 3, kwan[ka] = 2
Loop npass = 2: (ka,kb) = (11,20)
  for(j ..) -> jma=6, jtel(.,z) = (6, 4) --> splitting: ka=11, ner[ka]=3 => (nzf, jtel2, jres, km) = (0, 6, 4, 17)
 --> nclu = 4, kwan[ka] = 4
L500; found kwan[1] = 8 >= 2  ==> Loop again
Loop npass = 3: (ka,kb) = (1,8)
  for(j ..) -> jma=2, jtel(.,z) = (2, 6) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (1, 6, 2, 7)
 --> nclu = 5, kwan[ka] = 2
Loop npass = 3: (ka,kb) = (9,10)
  for(j ..) -> jma=2, jtel(.,z) = (2, 6) --> _NO_ splitting
 --> nclu = 5, kwan[ka] = -2
Loop npass = 3: (ka,kb) = (11,16)
  for(j ..) -> jma=5, jtel(.,z) = (5, 1) --> splitting: ka=11, ner[ka]=3 => (nzf, jtel2, jres, km) = (1, 1, 5, 12)
 --> nclu = 6, kwan[ka] = 5
Loop npass = 3: (ka,kb) = (17,20)
  for(j ..) -> jma=2, jtel(.,z) = (2, 2) --> splitting: ka=17, ner[ka]=7 => (nzf, jtel2, jres, km) = (0, 2, 2, 19)
 --> nclu = 7, kwan[ka] = 2
L500; found kwan[1] = 6 >= 2  ==> Loop again
Loop npass = 4: (ka,kb) = (1,6)
  for(j ..) -> jma=3, jtel(.,z) = (4, 2) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (1, 2, 4, 3)
 --> nclu = 8, kwan[ka] = 4
Loop npass = 4: (ka,kb) = (7,8)
  for(j ..) -> jma=5, jtel(.,z) = (1, 1) --> splitting: ka=7, ner[ka]=2 => (nzf, jtel2, jres, km) = (0, 1, 1, 8)
 --> nclu = 9, kwan[ka] = 1
Loop npass = 4: (ka,kb) = (12,16)
  for(j ..) -> jma=5, jtel(.,z) = (1, 1) --> _NO_ splitting
 --> nclu = 9, kwan[ka] = -5
Loop npass = 4: (ka,kb) = (17,18)
  for(j ..) -> jma=4, jtel(.,z) = (1, 1) --> splitting: ka=17, ner[ka]=7 => (nzf, jtel2, jres, km) = (1, 1, 1, 18)
 --> nclu = 10, kwan[ka] = 1
Loop npass = 4: (ka,kb) = (19,20)
  for(j ..) -> jma=4, jtel(.,z) = (1, 1) --> _NO_ splitting
 --> nclu = 10, kwan[ka] = -2
L500; found kwan[1] = 2 >= 2  ==> Loop again
Loop npass = 5: (ka,kb) = (1,2)
  for(j ..) -> jma=4, jtel(.,z) = (1, 1) --> _NO_ splitting
 --> nclu = 10, kwan[ka] = -2
Loop npass = 5: (ka,kb) = (3,6)
  for(j ..) -> jma=5, jtel(.,z) = (3, 1) --> splitting: ka=3, ner[ka]=11 => (nzf, jtel2, jres, km) = (0, 3, 1, 6)
 --> nclu = 11, kwan[ka] = 1
L500; found kwan[3] = 3 >= 2  ==> Loop again
Loop npass = 6: (ka,kb) = (3,5)
  for(j ..) -> jma=5, jtel(.,z) = (3, 1) --> _NO_ splitting
 --> nclu = 11, kwan[ka] = -3
mona(x, ..) fit;  x of dimension 20x6
Because of NA's, revised data:
    war fly ver end gro hai
ant   0   0   0   0   1   0
bee   0   1   0   0   1   0
cat   1   0   1   0   0   1
cpl   0   0   0   0   0   1
chi   1   0   1   0   1   1
cow   1   0   1   0   1   1
duc   1   1   1   0   1   0
eag   1   1   1   1   0   0
ele   1   0   1   1   1   0
fly   0   1   0   0   0   0
fro   0   0   1   0   1   0
her   0   0   1   0   1   0
lio   1   0   1   0   1   1
liz   0   0   1   0   0   0
lob   0   0   0   0   1   0
man   1   0   1   0   1   1
rab   1   0   1   0   1   1
sal   0   0   1   0   1   0
spi   0   0   0   0   0   1
wha   1   0   1   1   1   0
Order of objects:
 [1] ant lob fro her sal liz bee fly cpl spi cat chi cow lio man rab duc eag ele
[20] wha
Variable used:
 [1] NULL ver  NULL NULL gro  fly  gro  hai  NULL war  gro  NULL NULL NULL NULL
[16] hai  end  fly  NULL
Separation step:
 [1] 0 4 0 0 5 3 4 2 0 1 3 0 0 0 0 2 4 3 0

Available components:
[1] "data"      "hasNA"     "order"     "variable"  "step"      "order.lab"
[7] "call"     
seed =  14 
Loop npass = 1: (ka,kb) = (1,20)
  for(j ..) -> jma=1, jtel(.,z) = (10, 10) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (1, 10, 10, 11)
 --> nclu = 2, kwan[ka] = 10
L500; found kwan[1] = 10 >= 2  ==> Loop again
Loop npass = 2: (ka,kb) = (1,10)
  for(j ..) -> jma=3, jtel(.,z) = (4, 6) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (1, 6, 4, 7)
 --> nclu = 3, kwan[ka] = 4
Loop npass = 2: (ka,kb) = (11,20)
  for(j ..) -> jma=2, jtel(.,z) = (2, 8) --> splitting: ka=11, ner[ka]=3 => (nzf, jtel2, jres, km) = (1, 8, 2, 19)
 --> nclu = 4, kwan[ka] = 2
L500; found kwan[1] = 6 >= 2  ==> Loop again
Loop npass = 3: (ka,kb) = (1,6)
  for(j ..) -> jma=4, jtel(.,z) = (1, 5) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (1, 5, 1, 6)
 --> nclu = 5, kwan[ka] = 1
Loop npass = 3: (ka,kb) = (7,10)
  for(j ..) -> jma=4, jtel(.,z) = (1, 3) --> splitting: ka=7, ner[ka]=11 => (nzf, jtel2, jres, km) = (0, 1, 3, 8)
 --> nclu = 6, kwan[ka] = 3
Loop npass = 3: (ka,kb) = (11,18)
  for(j ..) -> jma=4, jtel(.,z) = (5, 3) --> splitting: ka=11, ner[ka]=3 => (nzf, jtel2, jres, km) = (1, 3, 5, 14)
 --> nclu = 7, kwan[ka] = 5
Loop npass = 3: (ka,kb) = (19,20)
  for(j ..) -> jma=4, jtel(.,z) = (1, 1) --> splitting: ka=19, ner[ka]=7 => (nzf, jtel2, jres, km) = (1, 1, 1, 20)
 --> nclu = 8, kwan[ka] = 1
L500; found kwan[1] = 5 >= 2  ==> Loop again
Loop npass = 4: (ka,kb) = (1,5)
  for(j ..) -> jma=2, jtel(.,z) = (2, 3) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (1, 3, 2, 4)
 --> nclu = 9, kwan[ka] = 2
Loop npass = 4: (ka,kb) = (8,10)
  for(j ..) -> jma=2, jtel(.,z) = (2, 3) --> _NO_ splitting
 --> nclu = 9, kwan[ka] = -3
Loop npass = 4: (ka,kb) = (11,13)
  for(j ..) -> jma=5, jtel(.,z) = (2, 1) --> splitting: ka=11, ner[ka]=3 => (nzf, jtel2, jres, km) = (1, 1, 2, 12)
 --> nclu = 10, kwan[ka] = 2
Loop npass = 4: (ka,kb) = (14,18)
  for(j ..) -> jma=6, jtel(.,z) = (3, 2) --> splitting: ka=14, ner[ka]=5 => (nzf, jtel2, jres, km) = (0, 3, 2, 17)
 --> nclu = 11, kwan[ka] = 2
L500; found kwan[1] = 3 >= 2  ==> Loop again
Loop npass = 5: (ka,kb) = (1,3)
  for(j ..) -> jma=5, jtel(.,z) = (2, 1) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (0, 2, 1, 3)
 --> nclu = 12, kwan[ka] = 1
Loop npass = 5: (ka,kb) = (4,5)
  for(j ..) -> jma=5, jtel(.,z) = (1, 1) --> splitting: ka=4, ner[ka]=2 => (nzf, jtel2, jres, km) = (0, 1, 1, 5)
 --> nclu = 13, kwan[ka] = 1
Loop npass = 5: (ka,kb) = (12,13)
  for(j ..) -> jma=5, jtel(.,z) = (1, 1) --> _NO_ splitting
 --> nclu = 13, kwan[ka] = -2
Loop npass = 5: (ka,kb) = (14,16)
  for(j ..) -> jma=5, jtel(.,z) = (1, 1) --> _NO_ splitting
 --> nclu = 13, kwan[ka] = -3
Loop npass = 5: (ka,kb) = (17,18)
  for(j ..) -> jma=5, jtel(.,z) = (1, 1) --> _NO_ splitting
 --> nclu = 13, kwan[ka] = -2
L500; found kwan[1] = 2 >= 2  ==> Loop again
Loop npass = 6: (ka,kb) = (1,2)
  for(j ..) -> jma=5, jtel(.,z) = (1, 1) --> _NO_ splitting
 --> nclu = 13, kwan[ka] = -2
mona(x, ..) fit;  x of dimension 20x6
Because of NA's, revised data:
    war fly ver end gro hai
ant   0   0   0   0   1   0
bee   0   1   0   0   1   1
cat   1   0   1   0   0   1
cpl   0   0   0   0   0   1
chi   1   0   1   1   1   1
cow   1   0   1   0   1   1
duc   1   1   1   0   1   0
eag   1   1   1   1   0   0
ele   1   0   1   1   1   0
fly   0   1   0   0   0   0
fro   0   0   1   1   1   0
her   0   0   1   0   1   0
lio   1   0   1   1   1   1
liz   0   0   1   0   1   0
lob   0   0   0   0   1   0
man   1   0   1   1   1   1
rab   1   0   1   0   1   1
sal   0   0   1   0   1   0
spi   0   0   0   1   1   1
wha   1   0   1   1   1   0
Order of objects:
 [1] ant lob cpl bee fly spi fro her liz sal cat cow rab chi lio man ele wha duc
[20] eag
Variable used:
 [1] NULL gro  fly  gro  end  ver  end  NULL NULL war  gro  NULL end  NULL NULL
[16] hai  NULL fly  end 
Separation step:
 [1] 0 5 4 5 3 2 3 0 0 1 4 0 3 0 0 4 0 2 3

Available components:
[1] "data"      "hasNA"     "order"     "variable"  "step"      "order.lab"
[7] "call"     
seed =  15 
Loop npass = 1: (ka,kb) = (1,20)
  for(j ..) -> jma=1, jtel(.,z) = (10, 10) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (1, 10, 10, 11)
 --> nclu = 2, kwan[ka] = 10
L500; found kwan[1] = 10 >= 2  ==> Loop again
Loop npass = 2: (ka,kb) = (1,10)
  for(j ..) -> jma=3, jtel(.,z) = (5, 5) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (1, 5, 5, 6)
 --> nclu = 3, kwan[ka] = 5
Loop npass = 2: (ka,kb) = (11,20)
  for(j ..) -> jma=2, jtel(.,z) = (2, 8) --> splitting: ka=11, ner[ka]=3 => (nzf, jtel2, jres, km) = (1, 8, 2, 19)
 --> nclu = 4, kwan[ka] = 2
L500; found kwan[1] = 5 >= 2  ==> Loop again
Loop npass = 3: (ka,kb) = (1,5)
  for(j ..) -> jma=2, jtel(.,z) = (2, 3) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (1, 3, 2, 4)
 --> nclu = 5, kwan[ka] = 2
Loop npass = 3: (ka,kb) = (6,10)
  for(j ..) -> jma=4, jtel(.,z) = (4, 1) --> splitting: ka=6, ner[ka]=11 => (nzf, jtel2, jres, km) = (0, 4, 1, 10)
 --> nclu = 6, kwan[ka] = 1
Loop npass = 3: (ka,kb) = (11,18)
  for(j ..) -> jma=4, jtel(.,z) = (5, 3) --> splitting: ka=11, ner[ka]=3 => (nzf, jtel2, jres, km) = (1, 3, 5, 14)
 --> nclu = 7, kwan[ka] = 5
Loop npass = 3: (ka,kb) = (19,20)
  for(j ..) -> jma=4, jtel(.,z) = (1, 1) --> splitting: ka=19, ner[ka]=7 => (nzf, jtel2, jres, km) = (1, 1, 1, 20)
 --> nclu = 8, kwan[ka] = 1
L500; found kwan[1] = 3 >= 2  ==> Loop again
Loop npass = 4: (ka,kb) = (1,3)
  for(j ..) -> jma=5, jtel(.,z) = (1, 2) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (0, 1, 2, 2)
 --> nclu = 9, kwan[ka] = 2
Loop npass = 4: (ka,kb) = (4,5)
  for(j ..) -> jma=5, jtel(.,z) = (1, 1) --> splitting: ka=4, ner[ka]=2 => (nzf, jtel2, jres, km) = (0, 1, 1, 5)
 --> nclu = 10, kwan[ka] = 1
Loop npass = 4: (ka,kb) = (6,9)
  for(j ..) -> jma=5, jtel(.,z) = (1, 3) --> splitting: ka=6, ner[ka]=11 => (nzf, jtel2, jres, km) = (1, 3, 1, 9)
 --> nclu = 11, kwan[ka] = 1
Loop npass = 4: (ka,kb) = (11,13)
  for(j ..) -> jma=5, jtel(.,z) = (1, 2) --> splitting: ka=11, ner[ka]=3 => (nzf, jtel2, jres, km) = (1, 2, 1, 13)
 --> nclu = 12, kwan[ka] = 1
Loop npass = 4: (ka,kb) = (14,18)
  for(j ..) -> jma=5, jtel(.,z) = (4, 1) --> splitting: ka=14, ner[ka]=5 => (nzf, jtel2, jres, km) = (0, 4, 1, 18)
 --> nclu = 13, kwan[ka] = 1
L500; found kwan[2] = 2 >= 2  ==> Loop again
Loop npass = 5: (ka,kb) = (2,3)
  for(j ..) -> jma=5, jtel(.,z) = (4, 1) --> _NO_ splitting
 --> nclu = 13, kwan[ka] = -2
Loop npass = 5: (ka,kb) = (6,8)
  for(j ..) -> jma=6, jtel(.,z) = (1, 2) --> splitting: ka=6, ner[ka]=11 => (nzf, jtel2, jres, km) = (1, 2, 1, 8)
 --> nclu = 14, kwan[ka] = 1
Loop npass = 5: (ka,kb) = (11,12)
  for(j ..) -> jma=6, jtel(.,z) = (1, 2) --> _NO_ splitting
 --> nclu = 14, kwan[ka] = -2
Loop npass = 5: (ka,kb) = (14,17)
  for(j ..) -> jma=6, jtel(.,z) = (3, 1) --> splitting: ka=14, ner[ka]=5 => (nzf, jtel2, jres, km) = (0, 3, 1, 17)
 --> nclu = 15, kwan[ka] = 1
L500; found kwan[6] = 2 >= 2  ==> Loop again
Loop npass = 6: (ka,kb) = (6,7)
  for(j ..) -> jma=6, jtel(.,z) = (3, 1) --> _NO_ splitting
 --> nclu = 15, kwan[ka] = -2
Loop npass = 6: (ka,kb) = (14,16)
  for(j ..) -> jma=6, jtel(.,z) = (3, 1) --> _NO_ splitting
 --> nclu = 15, kwan[ka] = -3
mona(x, ..) fit;  x of dimension 20x6
Because of NA's, revised data:
    war fly ver end gro hai
ant   0   0   0   0   1   0
bee   0   1   0   0   1   1
cat   1   0   1   0   0   1
cpl   0   0   0   0   0   1
chi   1   0   1   1   1   1
cow   1   0   1   0   0   1
duc   1   1   1   0   1   0
eag   1   1   1   1   0   0
ele   1   0   1   1   1   1
fly   0   1   0   0   0   0
fro   0   0   1   1   0   0
her   0   0   1   1   1   0
lio   1   0   1   1   0   1
liz   0   0   1   0   0   0
lob   0   0   0   0   0   1
man   1   0   1   1   1   1
rab   1   0   1   0   1   1
sal   0   0   1   1   0   0
spi   0   0   1   1   0   1
wha   1   0   1   1   1   0
Order of objects:
 [1] ant cpl lob bee fly fro sal spi her liz cat cow rab chi ele man wha lio duc
[20] eag
Variable used:
 [1] gro  NULL fly  gro  ver  NULL hai  gro  end  war  NULL gro  end  NULL NULL
[16] hai  gro  fly  end 
Separation step:
 [1] 4 0 3 4 2 0 5 4 3 1 0 4 3 0 0 5 4 2 3

Available components:
[1] "data"      "hasNA"     "order"     "variable"  "step"      "order.lab"
[7] "call"     
seed =  16 
Loop npass = 1: (ka,kb) = (1,20)
  for(j ..) -> jma=3, jtel(.,z) = (14, 6) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (1, 6, 14, 7)
 --> nclu = 2, kwan[ka] = 14
L500; found kwan[1] = 6 >= 2  ==> Loop again
Loop npass = 2: (ka,kb) = (1,6)
  for(j ..) -> jma=2, jtel(.,z) = (2, 4) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (1, 4, 2, 5)
 --> nclu = 3, kwan[ka] = 2
Loop npass = 2: (ka,kb) = (7,20)
  for(j ..) -> jma=1, jtel(.,z) = (11, 3) --> splitting: ka=7, ner[ka]=3 => (nzf, jtel2, jres, km) = (0, 11, 3, 18)
 --> nclu = 4, kwan[ka] = 3
L500; found kwan[1] = 4 >= 2  ==> Loop again
Loop npass = 3: (ka,kb) = (1,4)
  for(j ..) -> jma=5, jtel(.,z) = (1, 3) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (0, 1, 3, 2)
 --> nclu = 5, kwan[ka] = 3
Loop npass = 3: (ka,kb) = (5,6)
  for(j ..) -> jma=5, jtel(.,z) = (1, 1) --> splitting: ka=5, ner[ka]=2 => (nzf, jtel2, jres, km) = (0, 1, 1, 6)
 --> nclu = 6, kwan[ka] = 1
Loop npass = 3: (ka,kb) = (7,17)
  for(j ..) -> jma=6, jtel(.,z) = (6, 5) --> splitting: ka=7, ner[ka]=3 => (nzf, jtel2, jres, km) = (0, 6, 5, 13)
 --> nclu = 7, kwan[ka] = 5
Loop npass = 3: (ka,kb) = (18,20)
  for(j ..) -> jma=4, jtel(.,z) = (1, 2) --> splitting: ka=18, ner[ka]=11 => (nzf, jtel2, jres, km) = (0, 1, 2, 19)
 --> nclu = 8, kwan[ka] = 2
L500; found kwan[2] = 3 >= 2  ==> Loop again
Loop npass = 4: (ka,kb) = (2,4)
  for(j ..) -> jma=6, jtel(.,z) = (2, 1) --> splitting: ka=2, ner[ka]=4 => (nzf, jtel2, jres, km) = (0, 2, 1, 4)
 --> nclu = 9, kwan[ka] = 1
Loop npass = 4: (ka,kb) = (7,12)
  for(j ..) -> jma=4, jtel(.,z) = (3, 3) --> splitting: ka=7, ner[ka]=3 => (nzf, jtel2, jres, km) = (1, 3, 3, 10)
 --> nclu = 10, kwan[ka] = 3
Loop npass = 4: (ka,kb) = (13,17)
  for(j ..) -> jma=2, jtel(.,z) = (2, 3) --> splitting: ka=13, ner[ka]=7 => (nzf, jtel2, jres, km) = (0, 2, 3, 15)
 --> nclu = 11, kwan[ka] = 3
Loop npass = 4: (ka,kb) = (19,20)
  for(j ..) -> jma=2, jtel(.,z) = (2, 3) --> _NO_ splitting
 --> nclu = 11, kwan[ka] = -2
L500; found kwan[2] = 2 >= 2  ==> Loop again
Loop npass = 5: (ka,kb) = (2,3)
  for(j ..) -> jma=2, jtel(.,z) = (2, 3) --> _NO_ splitting
 --> nclu = 11, kwan[ka] = -2
Loop npass = 5: (ka,kb) = (7,9)
  for(j ..) -> jma=5, jtel(.,z) = (2, 1) --> splitting: ka=7, ner[ka]=3 => (nzf, jtel2, jres, km) = (1, 1, 2, 8)
 --> nclu = 12, kwan[ka] = 2
Loop npass = 5: (ka,kb) = (10,12)
  for(j ..) -> jma=5, jtel(.,z) = (2, 1) --> _NO_ splitting
 --> nclu = 12, kwan[ka] = -3
Loop npass = 5: (ka,kb) = (13,14)
  for(j ..) -> jma=4, jtel(.,z) = (1, 1) --> splitting: ka=13, ner[ka]=7 => (nzf, jtel2, jres, km) = (1, 1, 1, 14)
 --> nclu = 13, kwan[ka] = 1
Loop npass = 5: (ka,kb) = (15,17)
  for(j ..) -> jma=4, jtel(.,z) = (2, 1) --> splitting: ka=15, ner[ka]=9 => (nzf, jtel2, jres, km) = (0, 2, 1, 17)
 --> nclu = 14, kwan[ka] = 1
L500; found kwan[8] = 2 >= 2  ==> Loop again
Loop npass = 6: (ka,kb) = (8,9)
  for(j ..) -> jma=4, jtel(.,z) = (2, 1) --> _NO_ splitting
 --> nclu = 14, kwan[ka] = -2
Loop npass = 6: (ka,kb) = (15,16)
  for(j ..) -> jma=4, jtel(.,z) = (2, 1) --> _NO_ splitting
 --> nclu = 14, kwan[ka] = -2
mona(x, ..) fit;  x of dimension 20x6
Because of NA's, revised data:
    war fly ver end gro hai
ant   0   0   0   0   1   0
bee   0   1   0   0   1   1
cat   1   0   1   0   0   1
cpl   0   0   0   0   0   1
chi   1   0   1   1   1   1
cow   1   0   1   0   1   1
duc   1   1   1   0   1   0
eag   1   1   1   1   0   0
ele   1   0   1   1   1   0
fly   0   1   0   0   0   0
fro   0   0   1   1   1   0
her   0   0   1   0   1   0
lio   1   0   1   1   1   1
liz   1   0   1   0   0   0
lob   0   0   0   0   0   0
man   1   0   1   1   1   1
rab   1   0   1   0   1   1
sal   0   0   1   0   1   0
spi   0   0   0   0   0   1
wha   1   0   1   1   1   0
Order of objects:
 [1] ant cpl spi lob bee fly cat cow rab chi lio man duc eag ele wha liz fro her
[20] sal
Variable used:
 [1] gro  NULL hai  fly  gro  ver  gro  NULL end  NULL NULL hai  end  fly  NULL
[16] end  war  end  NULL
Separation step:
 [1] 3 0 4 2 3 1 5 0 4 0 0 3 5 4 0 5 2 3 0

Available components:
[1] "data"      "hasNA"     "order"     "variable"  "step"      "order.lab"
[7] "call"     
seed =  17 
Error in mona(ani.N2, trace = TRUE) : 
  No clustering performed, all variables have at least one missing value.
seed =  18 
Loop npass = 1: (ka,kb) = (1,20)
  for(j ..) -> jma=3, jtel(.,z) = (14, 6) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (1, 6, 14, 7)
 --> nclu = 2, kwan[ka] = 14
L500; found kwan[1] = 6 >= 2  ==> Loop again
Loop npass = 2: (ka,kb) = (1,6)
  for(j ..) -> jma=2, jtel(.,z) = (3, 3) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (0, 3, 3, 4)
 --> nclu = 3, kwan[ka] = 3
Loop npass = 2: (ka,kb) = (7,20)
  for(j ..) -> jma=6, jtel(.,z) = (6, 8) --> splitting: ka=7, ner[ka]=3 => (nzf, jtel2, jres, km) = (0, 6, 8, 13)
 --> nclu = 4, kwan[ka] = 8
L500; found kwan[1] = 3 >= 2  ==> Loop again
Loop npass = 3: (ka,kb) = (1,3)
  for(j ..) -> jma=5, jtel(.,z) = (2, 1) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (0, 2, 1, 3)
 --> nclu = 5, kwan[ka] = 1
Loop npass = 3: (ka,kb) = (4,6)
  for(j ..) -> jma=6, jtel(.,z) = (2, 1) --> splitting: ka=4, ner[ka]=4 => (nzf, jtel2, jres, km) = (0, 2, 1, 6)
 --> nclu = 6, kwan[ka] = 1
Loop npass = 3: (ka,kb) = (7,12)
  for(j ..) -> jma=4, jtel(.,z) = (3, 3) --> splitting: ka=7, ner[ka]=3 => (nzf, jtel2, jres, km) = (1, 3, 3, 10)
 --> nclu = 7, kwan[ka] = 3
Loop npass = 3: (ka,kb) = (13,20)
  for(j ..) -> jma=1, jtel(.,z) = (4, 4) --> splitting: ka=13, ner[ka]=7 => (nzf, jtel2, jres, km) = (0, 4, 4, 17)
 --> nclu = 8, kwan[ka] = 4
L500; found kwan[1] = 2 >= 2  ==> Loop again
Loop npass = 4: (ka,kb) = (1,2)
  for(j ..) -> jma=6, jtel(.,z) = (1, 1) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (1, 1, 1, 2)
 --> nclu = 9, kwan[ka] = 1
Loop npass = 4: (ka,kb) = (4,5)
  for(j ..) -> jma=6, jtel(.,z) = (1, 1) --> _NO_ splitting
 --> nclu = 9, kwan[ka] = -2
Loop npass = 4: (ka,kb) = (7,9)
  for(j ..) -> jma=5, jtel(.,z) = (2, 1) --> splitting: ka=7, ner[ka]=3 => (nzf, jtel2, jres, km) = (1, 1, 2, 8)
 --> nclu = 10, kwan[ka] = 2
Loop npass = 4: (ka,kb) = (10,12)
  for(j ..) -> jma=5, jtel(.,z) = (2, 1) --> _NO_ splitting
 --> nclu = 10, kwan[ka] = -3
Loop npass = 4: (ka,kb) = (13,16)
  for(j ..) -> jma=2, jtel(.,z) = (2, 2) --> splitting: ka=13, ner[ka]=7 => (nzf, jtel2, jres, km) = (0, 2, 2, 15)
 --> nclu = 11, kwan[ka] = 2
Loop npass = 4: (ka,kb) = (17,20)
  for(j ..) -> jma=4, jtel(.,z) = (2, 2) --> splitting: ka=17, ner[ka]=11 => (nzf, jtel2, jres, km) = (0, 2, 2, 19)
 --> nclu = 12, kwan[ka] = 2
L500; found kwan[8] = 2 >= 2  ==> Loop again
Loop npass = 5: (ka,kb) = (8,9)
  for(j ..) -> jma=4, jtel(.,z) = (2, 2) --> _NO_ splitting
 --> nclu = 12, kwan[ka] = -2
Loop npass = 5: (ka,kb) = (13,14)
  for(j ..) -> jma=5, jtel(.,z) = (1, 1) --> splitting: ka=13, ner[ka]=7 => (nzf, jtel2, jres, km) = (0, 1, 1, 14)
 --> nclu = 13, kwan[ka] = 1
Loop npass = 5: (ka,kb) = (15,16)
  for(j ..) -> jma=5, jtel(.,z) = (1, 1) --> _NO_ splitting
 --> nclu = 13, kwan[ka] = -2
Loop npass = 5: (ka,kb) = (17,18)
  for(j ..) -> jma=5, jtel(.,z) = (1, 1) --> splitting: ka=17, ner[ka]=11 => (nzf, jtel2, jres, km) = (0, 1, 1, 18)
 --> nclu = 14, kwan[ka] = 1
Loop npass = 5: (ka,kb) = (19,20)
  for(j ..) -> jma=5, jtel(.,z) = (1, 1) --> _NO_ splitting
 --> nclu = 14, kwan[ka] = -2
mona(x, ..) fit;  x of dimension 20x6
Because of NA's, revised data:
    war fly ver end gro hai
ant   0   1   0   0   1   0
bee   0   1   0   0   1   1
cat   1   0   1   0   0   1
cpl   0   0   0   0   0   1
chi   1   0   1   1   1   1
cow   1   0   1   0   1   1
duc   1   1   1   1   1   0
eag   1   1   1   1   0   0
ele   1   0   1   1   1   0
fly   0   1   0   0   0   0
fro   0   0   1   1   1   0
her   0   0   1   0   1   0
lio   1   0   1   1   1   1
liz   0   0   1   1   0   0
lob   0   0   0   0   0   0
man   1   0   1   1   1   1
rab   1   0   1   0   1   1
sal   0   0   1   0   1   0
spi   0   0   0   0   0   1
wha   1   0   1   1   1   0
Order of objects:
 [1] ant bee fly cpl spi lob cat cow rab chi lio man duc eag ele wha fro liz her
[20] sal
Variable used:
 [1] hai  gro  fly  NULL hai  ver  gro  NULL end  NULL NULL hai  gro  fly  NULL
[16] war  gro  end  NULL
Separation step:
 [1] 4 3 2 0 3 1 4 0 3 0 0 2 5 4 0 3 5 4 0

Available components:
[1] "data"      "hasNA"     "order"     "variable"  "step"      "order.lab"
[7] "call"     
seed =  19 
Loop npass = 1: (ka,kb) = (1,20)
  for(j ..) -> jma=1, jtel(.,z) = (10, 10) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (1, 10, 10, 11)
 --> nclu = 2, kwan[ka] = 10
L500; found kwan[1] = 10 >= 2  ==> Loop again
Loop npass = 2: (ka,kb) = (1,10)
  for(j ..) -> jma=3, jtel(.,z) = (3, 7) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (1, 7, 3, 8)
 --> nclu = 3, kwan[ka] = 3
Loop npass = 2: (ka,kb) = (11,20)
  for(j ..) -> jma=6, jtel(.,z) = (6, 4) --> splitting: ka=11, ner[ka]=3 => (nzf, jtel2, jres, km) = (0, 6, 4, 17)
 --> nclu = 4, kwan[ka] = 4
L500; found kwan[1] = 7 >= 2  ==> Loop again
Loop npass = 3: (ka,kb) = (1,7)
  for(j ..) -> jma=5, jtel(.,z) = (2, 5) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (0, 2, 5, 3)
 --> nclu = 5, kwan[ka] = 5
Loop npass = 3: (ka,kb) = (8,10)
  for(j ..) -> jma=5, jtel(.,z) = (2, 5) --> _NO_ splitting
 --> nclu = 5, kwan[ka] = -3
Loop npass = 3: (ka,kb) = (11,16)
  for(j ..) -> jma=4, jtel(.,z) = (3, 3) --> splitting: ka=11, ner[ka]=3 => (nzf, jtel2, jres, km) = (1, 3, 3, 14)
 --> nclu = 6, kwan[ka] = 3
Loop npass = 3: (ka,kb) = (17,20)
  for(j ..) -> jma=2, jtel(.,z) = (2, 2) --> splitting: ka=17, ner[ka]=7 => (nzf, jtel2, jres, km) = (0, 2, 2, 19)
 --> nclu = 7, kwan[ka] = 2
L500; found kwan[1] = 2 >= 2  ==> Loop again
Loop npass = 4: (ka,kb) = (1,2)
  for(j ..) -> jma=2, jtel(.,z) = (2, 2) --> _NO_ splitting
 --> nclu = 7, kwan[ka] = -2
Loop npass = 4: (ka,kb) = (3,7)
  for(j ..) -> jma=2, jtel(.,z) = (2, 3) --> splitting: ka=3, ner[ka]=2 => (nzf, jtel2, jres, km) = (0, 2, 3, 5)
 --> nclu = 8, kwan[ka] = 3
Loop npass = 4: (ka,kb) = (11,13)
  for(j ..) -> jma=2, jtel(.,z) = (2, 3) --> _NO_ splitting
 --> nclu = 8, kwan[ka] = -3
Loop npass = 4: (ka,kb) = (14,16)
  for(j ..) -> jma=2, jtel(.,z) = (2, 3) --> _NO_ splitting
 --> nclu = 8, kwan[ka] = -3
Loop npass = 4: (ka,kb) = (17,18)
  for(j ..) -> jma=4, jtel(.,z) = (1, 1) --> splitting: ka=17, ner[ka]=7 => (nzf, jtel2, jres, km) = (1, 1, 1, 18)
 --> nclu = 9, kwan[ka] = 1
Loop npass = 4: (ka,kb) = (19,20)
  for(j ..) -> jma=4, jtel(.,z) = (1, 1) --> _NO_ splitting
 --> nclu = 9, kwan[ka] = -2
L500; found kwan[3] = 2 >= 2  ==> Loop again
Loop npass = 5: (ka,kb) = (3,4)
  for(j ..) -> jma=6, jtel(.,z) = (1, 1) --> splitting: ka=3, ner[ka]=2 => (nzf, jtel2, jres, km) = (0, 1, 1, 4)
 --> nclu = 10, kwan[ka] = 1
Loop npass = 5: (ka,kb) = (5,7)
  for(j ..) -> jma=6, jtel(.,z) = (2, 1) --> splitting: ka=5, ner[ka]=4 => (nzf, jtel2, jres, km) = (0, 2, 1, 7)
 --> nclu = 11, kwan[ka] = 1
L500; found kwan[5] = 2 >= 2  ==> Loop again
Loop npass = 6: (ka,kb) = (5,6)
  for(j ..) -> jma=6, jtel(.,z) = (2, 1) --> _NO_ splitting
 --> nclu = 11, kwan[ka] = -2
mona(x, ..) fit;  x of dimension 20x6
Because of NA's, revised data:
    war fly ver end gro hai
ant   0   0   0   0   1   0
bee   0   1   0   0   0   1
cat   1   0   1   0   1   1
cpl   0   0   0   0   0   1
chi   1   0   1   1   1   1
cow   1   0   1   0   1   1
duc   1   1   1   0   1   0
eag   1   1   1   1   0   0
ele   1   0   1   1   1   0
fly   0   1   0   0   0   0
fro   0   0   1   0   0   0
her   0   0   0   0   1   0
lio   1   0   1   1   1   1
liz   0   0   1   0   0   0
lob   0   0   0   0   0   0
man   1   0   1   1   1   1
rab   1   0   1   0   1   1
sal   0   0   1   0   0   0
spi   0   0   0   0   0   1
wha   1   0   1   1   1   0
Order of objects:
 [1] ant her bee fly cpl spi lob fro liz sal cat cow rab chi lio man duc eag ele
[20] wha
Variable used:
 [1] NULL gro  hai  fly  NULL hai  ver  NULL NULL war  NULL NULL end  NULL NULL
[16] hai  end  fly  NULL
Separation step:
 [1] 0 3 5 4 0 5 2 0 0 1 0 0 3 0 0 2 4 3 0

Available components:
[1] "data"      "hasNA"     "order"     "variable"  "step"      "order.lab"
[7] "call"     
seed =  20 
Loop npass = 1: (ka,kb) = (1,20)
  for(j ..) -> jma=1, jtel(.,z) = (10, 10) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (1, 10, 10, 11)
 --> nclu = 2, kwan[ka] = 10
L500; found kwan[1] = 10 >= 2  ==> Loop again
Loop npass = 2: (ka,kb) = (1,10)
  for(j ..) -> jma=4, jtel(.,z) = (2, 8) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (1, 8, 2, 9)
 --> nclu = 3, kwan[ka] = 2
Loop npass = 2: (ka,kb) = (11,20)
  for(j ..) -> jma=6, jtel(.,z) = (7, 3) --> splitting: ka=11, ner[ka]=3 => (nzf, jtel2, jres, km) = (0, 7, 3, 18)
 --> nclu = 4, kwan[ka] = 3
L500; found kwan[1] = 8 >= 2  ==> Loop again
Loop npass = 3: (ka,kb) = (1,8)
  for(j ..) -> jma=6, jtel(.,z) = (2, 6) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (1, 6, 2, 7)
 --> nclu = 5, kwan[ka] = 2
Loop npass = 3: (ka,kb) = (9,10)
  for(j ..) -> jma=6, jtel(.,z) = (2, 6) --> _NO_ splitting
 --> nclu = 5, kwan[ka] = -2
Loop npass = 3: (ka,kb) = (11,17)
  for(j ..) -> jma=3, jtel(.,z) = (6, 1) --> splitting: ka=11, ner[ka]=3 => (nzf, jtel2, jres, km) = (0, 6, 1, 17)
 --> nclu = 6, kwan[ka] = 1
Loop npass = 3: (ka,kb) = (18,20)
  for(j ..) -> jma=2, jtel(.,z) = (2, 1) --> splitting: ka=18, ner[ka]=7 => (nzf, jtel2, jres, km) = (0, 2, 1, 20)
 --> nclu = 7, kwan[ka] = 1
L500; found kwan[1] = 6 >= 2  ==> Loop again
Loop npass = 4: (ka,kb) = (1,6)
  for(j ..) -> jma=2, jtel(.,z) = (2, 4) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (0, 2, 4, 3)
 --> nclu = 8, kwan[ka] = 4
Loop npass = 4: (ka,kb) = (7,8)
  for(j ..) -> jma=2, jtel(.,z) = (1, 1) --> splitting: ka=7, ner[ka]=2 => (nzf, jtel2, jres, km) = (0, 1, 1, 8)
 --> nclu = 9, kwan[ka] = 1
Loop npass = 4: (ka,kb) = (11,16)
  for(j ..) -> jma=4, jtel(.,z) = (2, 4) --> splitting: ka=11, ner[ka]=3 => (nzf, jtel2, jres, km) = (1, 4, 2, 15)
 --> nclu = 10, kwan[ka] = 2
Loop npass = 4: (ka,kb) = (18,19)
  for(j ..) -> jma=4, jtel(.,z) = (1, 1) --> splitting: ka=18, ner[ka]=7 => (nzf, jtel2, jres, km) = (1, 1, 1, 19)
 --> nclu = 11, kwan[ka] = 1
L500; found kwan[1] = 2 >= 2  ==> Loop again
Loop npass = 5: (ka,kb) = (1,2)
  for(j ..) -> jma=5, jtel(.,z) = (1, 1) --> splitting: ka=1, ner[ka]=1 => (nzf, jtel2, jres, km) = (0, 1, 1, 2)
 --> nclu = 12, kwan[ka] = 1
Loop npass = 5: (ka,kb) = (3,6)
  for(j ..) -> jma=3, jtel(.,z) = (2, 2) --> splitting: ka=3, ner[ka]=12 => (nzf, jtel2, jres, km) = (0, 2, 2, 5)
 --> nclu = 13, kwan[ka] = 2
Loop npass = 5: (ka,kb) = (11,14)
  for(j ..) -> jma=5, jtel(.,z) = (2, 2) --> splitting: ka=11, ner[ka]=3 => (nzf, jtel2, jres, km) = (1, 2, 2, 13)
 --> nclu = 14, kwan[ka] = 2
Loop npass = 5: (ka,kb) = (15,16)
  for(j ..) -> jma=5, jtel(.,z) = (1, 1) --> splitting: ka=15, ner[ka]=5 => (nzf, jtel2, jres, km) = (0, 1, 1, 16)
 --> nclu = 15, kwan[ka] = 1
L500; found kwan[3] = 2 >= 2  ==> Loop again
Loop npass = 6: (ka,kb) = (3,4)
  for(j ..) -> jma=5, jtel(.,z) = (1, 1) --> splitting: ka=3, ner[ka]=12 => (nzf, jtel2, jres, km) = (0, 1, 1, 4)
 --> nclu = 16, kwan[ka] = 1
Loop npass = 6: (ka,kb) = (5,6)
  for(j ..) -> jma=5, jtel(.,z) = (1, 1) --> _NO_ splitting
 --> nclu = 16, kwan[ka] = -2
Loop npass = 6: (ka,kb) = (11,12)
  for(j ..) -> jma=5, jtel(.,z) = (1, 1) --> _NO_ splitting
 --> nclu = 16, kwan[ka] = -2
Loop npass = 6: (ka,kb) = (13,14)
  for(j ..) -> jma=5, jtel(.,z) = (1, 1) --> _NO_ splitting
 --> nclu = 16, kwan[ka] = -2
mona(x, ..) fit;  x of dimension 20x6
Because of NA's, revised data:
    war fly ver end gro hai
ant   0   1   0   0   1   0
bee   0   1   1   0   1   1
cat   1   0   1   0   0   1
cpl   1   0   0   0   0   1
chi   1   0   1   1   1   1
cow   1   0   1   0   0   1
duc   1   1   1   0   1   0
eag   1   1   1   1   0   0
ele   0   0   1   1   1   0
fly   0   1   0   0   0   0
fro   0   0   1   1   1   0
her   0   0   1   0   1   0
lio   1   0   1   0   1   1
liz   0   0   1   0   0   0
lob   0   0   0   0   1   0
man   1   0   1   1   0   1
rab   1   0   1   0   1   1
sal   0   0   0   0   1   0
spi   0   0   0   0   0   1
wha   1   0   1   1   1   0
Order of objects:
 [1] ant fly her liz lob sal bee spi ele fro cat cow lio rab chi man cpl duc eag
[20] wha
Variable used:
 [1] gro  fly  gro  ver  NULL hai  fly  end  NULL war  NULL gro  NULL end  gro 
[16] ver  hai  end  fly 
Separation step:
 [1] 5 4 6 5 0 3 4 2 0 1 0 5 0 4 5 3 2 4 3

Available components:
[1] "data"      "hasNA"     "order"     "variable"  "step"      "order.lab"
[7] "call"     
> 
> ## Check all "too many NA" and other illegal cases
> ani.NA   <- animals; ani.NA[4,] <- NA
> aniNA    <- within(animals, { end[2:9] <- NA })
> aniN2    <- animals; aniN2[cbind(1:6, c(3, 1, 4:6, 2))] <- NA
> ani.non2 <- within(animals, end[7] <- 3 )
> ani.idNA <- within(animals, end[!is.na(end)] <- 1 )
> ## use tools::assertError() {once you don't use *.Rout.save anymore}
> try( mona(ani.NA)   )
Error in mona(ani.NA) : 
  No clustering performed, an object was found with all values missing.
> try( mona(aniNA)    )
Error in mona(aniNA) : 
  No clustering performed, found variable with more than half values missing.
> try( mona(aniN2)    )
Error in mona(aniN2) : 
  No clustering performed, all variables have at least one missing value.
> try( mona(ani.non2) )
Error in mona(ani.non2) : 
  All variables must be binary (e.g., a factor with 2 levels, both present).
> try( mona(ani.idNA) )
Error in mona(ani.idNA) : 
  All variables must be binary (e.g., a factor with 2 levels, both present).
> 
> if(require(MASS, lib.loc=.Library)) withAutoprint({
+     set.seed(253)
+     n <- 512; p <- 3
+     Sig <- diag(p); Sig[] <- 0.8 ^ abs(col(Sig) - row(Sig))
+     x3 <- mvrnorm(n, rep(0,p), Sig) >= 0
+     x <- cbind(x3, rbinom(n, size=1, prob = 1/2))
+ 
+     sapply(as.data.frame(x), table)
+ 
+     mx <- mona(x)
+     str(mx)
+     lapply(mx[c(1,3,4)], table)
+     mx # (too much, but still)
+ })
Loading required package: MASS
> set.seed(253)
> n <- 512
> p <- 3
> Sig <- diag(p)
> Sig[] <- 0.8^abs(col(Sig) - row(Sig))
> x3 <- mvrnorm(n, rep(0, p), Sig) >= 0
> x <- cbind(x3, rbinom(n, size = 1, prob = 1/2))
> sapply(as.data.frame(x), table)
   V1  V2  V3  V4
0 250 252 256 280
1 262 260 256 232
> mx <- mona(x)
> str(mx)
List of 7
 $ data     : int [1:512, 1:4] 0 0 1 1 0 0 0 1 1 1 ...
 $ hasNA    : logi FALSE
 $ order    : int [1:512] 1 5 7 11 15 25 34 35 41 42 ...
 $ variable : int [1:511] 0 0 0 0 0 0 0 0 0 0 ...
 $ step     : int [1:511] 0 0 0 0 0 0 0 0 0 0 ...
 $ order.lab: NULL
 $ call     : language mona(x = x)
 - attr(*, "class")= chr "mona"
> lapply(mx[c(1, 3, 4)], table)
$data

   0    1 
1038 1010 

$order

  1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17  18  19  20 
  1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1 
 21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40 
  1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1 
 41  42  43  44  45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60 
  1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1 
 61  62  63  64  65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80 
  1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1 
 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96  97  98  99 100 
  1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1 
101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 
  1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1 
121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 
  1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1 
141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 
  1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1 
161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 
  1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1 
181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 
  1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1 
201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 
  1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1 
221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 
  1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1 
241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 257 258 259 260 
  1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1 
261 262 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 
  1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1 
281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 
  1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1 
301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 
  1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1 
321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 
  1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1 
341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 
  1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1 
361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 
  1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1 
381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 
  1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1 
401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 
  1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1 
421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 
  1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1 
441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 
  1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1 
461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 
  1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1 
481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 
  1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1   1 
501 502 503 504 505 506 507 508 509 510 511 512 
  1   1   1   1   1   1   1   1   1   1   1   1 

$variable

  0   1   2   3   4 
496   2   1   4   8 

> mx
mona(x, ..) fit;  x of dimension 512x4
Order of objects:
  [1]   1   5   7  11  15  25  34  35  41  42  55  58  60  66  94 111 123 141
 [19] 142 152 157 161 162 163 167 172 174 178 190 194 199 200 204 205 206 218
 [37] 222 231 236 239 242 243 246 249 264 267 275 276 284 289 291 297 303 305
 [55] 308 316 326 333 335 336 343 356 369 370 381 386 387 400 405 406 414 433
 [73] 434 438 446 447 453 462 498  20  23  28  30  31  40  70  71  73  78  79
 [91]  80  91  97  99 109 114 121 122 124 125 130 136 146 149 153 168 171 175
[109] 184 185 196 198 208 210 216 224 227 254 258 269 271 273 274 290 293 294
[127] 299 310 313 319 332 339 354 358 360 367 372 376 384 392 394 398 399 402
[145] 412 418 419 428 429 431 436 440 444 445 449 451 455 459 460 469 472 483
[163] 488 493 500 506  13  64 104 189 212 257 278 334 341 365 389 396 411 448
[181] 471 487 503  27  92 102 127 202 237 255 265 286 296 342 416 495 509  10
[199]  54 139 177 306 380 391 426 474  16  22 138 188 195 234 256 272 328 423
[217]  18  19  29  67  72 129 135 183 266 374 379 477 482 504  44  49 159 173
[235] 193 226 241 321 345 362 375 397 430 456 484 486 490 491 492 496 507 510
[253]   2  38  48  56  74 110 151 164 187 201 215 270 283 309 318 323 348 350
[271] 352 363 437 450 466 478 480 505   6  95 100 116 233 261 277 279 288 378
[289] 508  21  53  61  87 112 211 371 457 101 126 145 228 244 304 395 424   3
[307]  17  26  32  46  52  62  63  65  75  76  81  85  86  88  89  98 108 117
[325] 128 131 134 140 144 154 156 158 166 170 180 191 192 197 209 214 217 220
[343] 221 225 229 232 240 247 251 259 263 268 287 301 311 314 317 322 325 331
[361] 337 344 346 349 357 364 366 368 373 388 390 403 404 417 420 421 425 427
[379] 435 441 442 443 464 465 467 468 470 481 485 489 494 502 511 512  14  24
[397]  33  36  37  39  45  50  51  57  59  68  69  83  93  96 103 105 113 115
[415] 118 120 132 133 137 148 150 155 165 169 176 179 182 203 207 223 230 235
[433] 238 245 248 252 260 262 281 282 292 295 298 300 307 315 320 324 329 330
[451] 340 351 353 361 377 382 383 385 408 409 410 413 415 422 439 452 454 461
[469] 463 473 475 497 499 501   4   8   9  12  43  47  82 107 143 181 186 280
[487] 327 338 347 355 407 432 458 476 479  77  84  90 106 119 147 160 213 219
[505] 250 253 285 302 312 359 393 401
Variable used:
  [1] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 [38] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 [75] 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
[112] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
[149] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0
[186] 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0
[223] 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0
[260] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0
[297] 4 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
[334] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
[371] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 0 0
[408] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
[445] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0
[482] 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
Separation step:
  [1] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 [38] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
 [75] 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
[112] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
[149] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0
[186] 0 0 0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0
[223] 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0
[260] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0
[297] 4 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
[334] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
[371] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 0 0
[408] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
[445] 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0
[482] 0 0 0 0 0 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0

Available components:
[1] "data"      "hasNA"     "order"     "variable"  "step"      "order.lab"
[7] "call"     
> 
> 
> try(
+ mona(cbind(1:0), trace=2)
+ ) -> et ## error: need p >= 2
Error in mona(cbind(1:0), trace = 2) : 
  mona() needs at least p >= 2 variables (in current implementation)
> stopifnot(inherits(et, "try-error"),
+           grepl("needs at least p >= 2", et))
> ## in the past, gave
> ## Loop npass = 1: (ka,kb) = (1,2)
> ##   for(j ..) -> jma=1, jtel(.,z) = (17952088, 8) --> splitting: (nel; jres, ka, km) = (1; -17952086, 1, 17952089)
> ##  inner loop: for(k in ka:km) use ner[k]:  1 2 2 2 2 2 2 2 2 2 ..... [infinite loop]
> 
> proc.time()
   user  system elapsed 
  0.220   0.059   0.274 
